{"version":3,"sources":["assets/logo_white.svg","assets/eth.png","assets/logo.svg","assets/wordmark_white.svg","contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","hooks/index.ts","components/Popover/index.tsx","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/ButtonStyled/index.js","components/GlobalChart/index.js","components/Search/index.js","components/Panel/index.js","components/UniPrice/index.js","components/GlobalStats/index.js","components/Checkbox/index.js","pages/GlobalPage.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","components/HoverText/index.tsx","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","components/MiningPositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","components/Title/index.js","components/Toggle/index.tsx","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","components/analytics/GoogleAnalyticsReporter.jsx","App.js","index.js"],"names":["module","exports","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","ThemeProvider","darkMode","theme","color","customColor","textColor","panelColor","backgroundColor","uniswapPink","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","blue","background","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","ThemedBackground","div","a","attrs","target","rel","GlobalStyle","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","healthClient","stakingClient","blockClient","timeframeOptions","WEEK","MONTH","HALF_YEAR","ALL_TIME","TOKEN_BLACKLIST","PAIR_BLACKLIST","BLOCKED_WARNINGS","FEE_WARNING_TOKENS","UNTRACKED_COPY","TRACKED_OVERRIDES_PAIRS","TRACKED_OVERRIDES_TOKENS","SUBGRAPH_HEALTH","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","MINING_POSITIONS","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKEN_TOP_DAY_DATAS","TOKENS_HISTORICAL_BULK","tokens","tokenString","token","TOKEN_DATA","FILTERED_TRANSACTIONS","Ajv","allErrors","compile","schema","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","useLatestBlocks","latestBlock","headBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","e","console","log","fetch","useTimeframe","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","getSwapLink","getUniswapAppLink","linkVariable","localNumber","val","Numeral","format","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","shortenAddress","chars","isAddress","substring","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","t","push","split","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","i","toNiceDateYear","ethers","utils","getAddress","toLowerCase","toK","num","urls","tx","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","toString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","name","updateNameData","id","includes","safeAccess","object","reduce","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","Promise","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","oneWeekVolumeUntracked","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","add","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","offsetVolumes","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","oneDayPrice","ethPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateAllPairsInUniswap","updateAllTokensInUniswap","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","uniswapFactories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","checked","getChartData","oldestDateToFetch","offsetData","weeklyData","uniswapDayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getAllPairsOnUniswap","getAllTokensOnUniswap","useGlobalData","useGlobalChartData","useState","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","combinedData","tokenAddresses","useTokenDataContext","datas","acc","isMissingData","formattedByDate","dayDatas","getTokenChartData","fetchDatas","useTokenChartDataCombined","newChartData","newWeeklyData","ethPriceOld","newPrice","priceChange","checkForEthPrice","TokenDataContext","topTokens","combinedVol","interval","updateTopTokens","updateCombinedVolume","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","currentDate","tokenids","ids","tokenDayDatas","accum","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","aaveData","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","tokenAddr","latestPriceUSD","latestPairDatas","mostLiquidPairs","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","uniswap_return","netValueT0","hodleReturn","netReturn","uniswapReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","round","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","uniswap","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","pulse","keyframes","Wrapper","fill","height","css","AnimatedImg","LocalLoader","src","require","alt","Link","external","rest","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","BlockedWrapper","BlockedMessageWrapper","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","BAD_IMAGES","Inline","Image","img","size","StyledEthereumLogo","TokenLogo","header","error","setError","role","aria-label","EthereumLogo","boxShadow","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","HigherLogo","CoveredLogo","useColor","setColor","Vibrant","from","getPalette","err","palette","detectedHex","hex","AAscore","shade","PopoverContainer","show","transparentize","ReferenceElement","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","Arrow","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","field","useTracked","formatDataText","trackedValue","supressWarning","showUntracked","opacity","textAlign","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","weekVolume","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","item","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","hash","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","base","baseChange","title","useWeekly","chartCreated","setChartCreated","dataPrev","usePrevious","tooltip","document","getElementById","removeChild","resize","formattedData","topScale","previousTheme","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","className","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ope","ButtonDark","OptionButton","CHART_VIEW","VOLUME","LIQUIDITY","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","setVolumeWindow","dailyData","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","zIndex","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInUniswap","allTokenData","useAllPairsInUniswap","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","replace","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","match","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","PriceCard","formatPercent","rawPercent","UniPrice","daiPair","usdcPair","usdtPair","daiPerEth","usdcPerEth","usdtPerEth","Header","Medium","GlobalStats","below1295","below1180","below1024","below400","below816","showPriceCard","setShowPriceCard","pairCount","formattedEthPrice","oneDayFees","mr","StyleCheckbox","ButtonText","CheckBox","setChecked","ml","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","setUseTracked","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","CandleStickChart","valueFormatter","low","high","min","max","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","label","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","strokeWidth","dot","stroke","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","minWidth","HoverText","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningIcon","AlertCircle","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","savedTokens","addToken","flexWrap","alingItems","alignSelf","gridColumn","gridRow","Checkbox","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","pairTxns","usePairTransactions","formattedLiquidity","usingUntrackedLiquidity","showUSDWaning","token0USD","token1USD","token0Rate","token1Rate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","UNISWAP_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","miningPosition","pairPercentage","balance","valueFirstPair","valueSecondPair","firstPairName","miningPool","secondPairName","firstPairAddress","secondPairAddress","miningPositionsSorted","AccountWrapper","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","miningPositionData","useMiningPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","setSavedOpen","removePair","removeToken","TitleWrapper","UniIcon","Option","activeText","Title","useHistory","Logo","StyledToggle","Toggle","toggle","isMobile","DesktopWrapper","MobileWrapper","HeaderText","Polling","PollingDot","seconds","sessionStart","setSeconds","useSessionStart","isDark","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","GoogleAnalyticsReporter","search","ReactGA","pageview","AppWrapper","Right","Center","WarningBanner","LayoutWrapper","savedOpen","App","globalChartData","component","exacts","strict","render","params","accountAddress","ContextProviders","Updaters","initialize","process","gaOptions","storage","storeGac","anonymizeIp","customBrowserType","ReactDOM"],"mappings":"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","file":"static/js/main.344da104.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.325adc6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth.5fc0c9bd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.27a64f2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordmark_white.9914390f.svg\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nconst UNISWAP = 'UNISWAP'\n\nconst VERSION = 'VERSION'\nconst CURRENT_VERSION = 0\nconst LAST_SAVED = 'LAST_SAVED'\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\nconst SAVED_TOKENS = 'SAVED_TOKENS'\nconst SAVED_PAIRS = 'SAVED_PAIRS'\n\nconst DARK_MODE = 'DARK_MODE'\n\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\n\nconst UPDATE_KEY = 'UPDATE_KEY'\n\nconst LocalStorageContext = createContext()\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_KEY: {\n      const { key, value } = payload\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\n      } else {\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\n    }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {},\n  }\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP))\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage\n    } else {\n      return { ...defaultLocalStorage, ...parsed }\n    }\n  } catch {\n    return defaultLocalStorage\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, undefined, init)\n\n  const updateKey = useCallback((key, value) => {\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\n  }, [])\n\n  return (\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\n      {children}\n    </LocalStorageContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const [state] = useLocalStorageContext()\n\n  useEffect(() => {\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\n  })\n\n  return null\n}\n\nexport function useDarkModeManager() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  let isDarkMode = state[DARK_MODE]\n  const toggleDarkMode = useCallback(\n    (value) => {\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\n    },\n    [updateKey, isDarkMode]\n  )\n  return [isDarkMode, toggleDarkMode]\n}\n\nexport function usePathDismissed(path) {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\n  function dismiss() {\n    let newPaths = state?.[DISMISSED_PATHS]\n    newPaths[path] = true\n    updateKey(DISMISSED_PATHS, newPaths)\n  }\n\n  return [pathDismissed, dismiss]\n}\n\nexport function useSavedAccounts() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\n\n  const addAccount = useCallback(\n    (account) => {\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\n    },\n    [savedAccounts, updateKey]\n  )\n\n  const removeAccount = useCallback(\n    (account) => {\n      let index = savedAccounts?.indexOf(account) ?? -1\n      if (index > -1) {\n        updateKey(SAVED_ACCOUNTS, [\n          ...savedAccounts.slice(0, index),\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\n        ])\n      }\n    },\n    [savedAccounts, updateKey]\n  )\n\n  return [savedAccounts, addAccount, removeAccount]\n}\n\nexport function useSavedPairs() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedPairs = state?.[SAVED_PAIRS]\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol,\n    }\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  function removePair(address) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = null\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  return [savedPairs, addPair, removePair]\n}\n\nexport function useSavedTokens() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedTokens = state?.[SAVED_TOKENS]\n\n  function addToken(address, symbol) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = {\n      symbol,\n    }\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  function removeToken(address) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = null\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  return [savedTokens, addToken, removeToken]\n}\n","import React from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode] = useDarkModeManager()\n\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = (darkMode, color) => ({\n  customColor: color,\n  textColor: darkMode ? color : 'black',\n\n  panelColor: darkMode ? 'rgba(255, 255, 255, 0)' : 'rgba(255, 255, 255, 0)',\n  backgroundColor: darkMode ? '#212429' : '#F7F8FA',\n\n  uniswapPink: darkMode ? '#FF6B00' : 'black', // added by Issei\n\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  inputBackground: darkMode ? '#1F1F1F' : '#FAFAFA',\n  shadowColor: darkMode ? '#000' : '#2F80ED',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n\n  text1: darkMode ? '#FAFAFA' : '#1F1F1F',\n  text2: darkMode ? '#C3C5CB' : '#565A69',\n  text3: darkMode ? '#6C7284' : '#888D9B',\n  text4: darkMode ? '#565A69' : '#C3C5CB',\n  text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n  // special case text types\n  white: '#FFFFFF',\n\n  // backgrounds / greys\n  bg1: darkMode ? '#212429' : '#FAFAFA',\n  bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n  bg3: darkMode ? '#40444F' : '#EDEEF2',\n  bg4: darkMode ? '#565A69' : '#CED0D9',\n  bg5: darkMode ? '#565A69' : '#888D9B',\n  bg6: darkMode ? '#000' : '#FFFFFF',\n\n  //specialty colors\n  modalBG: darkMode ? 'rgba(0,0,0,0.85)' : 'rgba(0,0,0,0.6)',\n  advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.4)',\n  onlyLight: darkMode ? '#22242a' : 'transparent',\n  divider: darkMode ? 'rgba(43, 43, 43, 0.435)' : 'rgba(43, 43, 43, 0.035)',\n\n  //primary colors\n  primary1: darkMode ? '#2172E5' : '#6318DA', //'#ff007a', - removed by Issei\n  primary2: darkMode ? '#3680E7' : '#6318DA', //'#FF8CC3', - removed by Issei\n  primary3: darkMode ? '#4D8FEA' : '#6318DA', //'#FF99C9', - removed by Issei\n  primary4: darkMode ? '#376bad70' : '#6318DA', //'#F6DDE8', - removed by Issei\n  primary5: darkMode ? '#153d6f70' : '#6318DA', //'#FDEAF1', - removed by Issei\n\n  // color text\n  primaryText1: darkMode ? '#6da8ff' : '#6318DA', //'#ff007a', - removed by Issei\n\n  // secondary colors\n  secondary1: darkMode ? '#2172E5' : '#ff007a',\n  secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n  secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n  shadow1: darkMode ? '#000' : '#2F80ED',\n\n  // other\n  red1: '#FF6871',\n  green1: '#27AE60',\n  yellow1: '#FFE270',\n  yellow2: '#F3841E',\n  link: '#2172E5',\n  blue: '2f80ed',\n\n  background: darkMode ? 'black' : `radial-gradient(50% 50% at 50% 50%, #6318DA 0%, #fff 0%)`,\n})\n\nconst TextWrapper = styled(Text)`\n  color: ${({ color, theme }) => theme[color]};\n`\n\nexport const TYPE = {\n  main(props) {\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\n  },\n\n  body(props) {\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\n  },\n\n  small(props) {\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\n  },\n\n  header(props) {\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\n  },\n\n  largeHeader(props) {\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\n  },\n\n  light(props) {\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\n  },\n\n  pink(props) {\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\n  },\n}\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Link = styled.a.attrs({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n})`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  :hover {\n    text-decoration: underline;\n  }\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const ThemedBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  /* z-index: ; */\n\n  transform: translateY(-110vh);\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 14px;    \n    background-color: ${({ theme }) => theme.bg6};\n  }\n\n  a {\n    text-decoration: none;\n\n    :hover {\n      text-decoration: none\n    }\n  }\n\n  \n.three-line-legend {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: #20262E;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n@media screen and (max-width: 800px) {\n  .three-line-legend {\n    display: none !important;\n  }\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n  \n\n  & > * {\n    width: 100% !important;\n  }\n}\n\n\n  html {\n    font-size: 1rem;\n    font-variant: none;\n    color: 'black';\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    height: 100%;\n  }\n`\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://testnet-graph-node.functionx.io/subgraphs/name/FXSwapAnalytics', // Added by - Issei\n    //uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2', // Commented out - Issei\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const healthClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://testnet-graph-node.functionx.io/index-node/graphql', // Added by - Issei\n    //uri: 'https://api.thegraph.com/index-node/graphql', // Commented out - Issei\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const stakingClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/way2rach/talisman',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const blockClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://testnet-graph-node.functionx.io/subgraphs/name/FX-EVM-Blocklytics', // Added by - Issei\n    //uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks', // Commented out - Issei\n  }),\n  cache: new InMemoryCache(),\n})\n","export const FACTORY_ADDRESS = '0x83849cb4b2179fbaee46affd15ec64984f2b61e6'\n//export const FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f' // commented out by: Issei\n\nexport const BUNDLE_ID = '1'\n\nexport const timeframeOptions = {\n  WEEK: '1 week',\n  MONTH: '1 month',\n  // THREE_MONTHS: '3 months',\n  // YEAR: '1 year',\n  HALF_YEAR: '6 months',\n  ALL_TIME: 'All time',\n}\n\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\nexport const SUPPORTED_LIST_URLS__NO_ENS = [\n  'https://gateway.ipfs.io/ipns/tokens.uniswap.org',\n  'https://www.coingecko.com/tokens_list/uniswap/defi_100/v_0_0_0.json',\n]\n\n// hide from overview list\nexport const TOKEN_BLACKLIST = [\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76',\n  '0x93b2fff814fcaeffb01406e80b4ecd89ca6a021b',\n\n  // rebass tokens\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\n]\n\n// pair blacklist\nexport const PAIR_BLACKLIST = [\n  '0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5',\n  '0x97cb8cbe91227ba87fc21aaf52c4212d245da3f8',\n  '0x1acba73121d5f63d8ea40bdc64edb594bd88ed09',\n  '0x7d7e813082ef6c143277c71786e5be626ec77b20',\n]\n\n// warnings to display if page contains info about blocked token\nexport const BLOCKED_WARNINGS = {\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76':\n    'TikTok Inc. has asserted this token is violating its trademarks and therefore is not available.',\n}\n\n/**\n * For tokens that cause erros on fee calculations\n */\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\n\nexport const UNTRACKED_COPY = 'Derived USD values may be inaccurate without liquid stablecoin or FX pairings.'\n\n// pairs that should be tracked but arent due to lag in subgraph\nexport const TRACKED_OVERRIDES_PAIRS = [\n  '0x9928e4046d7c6513326ccea028cd3e7a91c7590a',\n  '0x87da823b6fc8eb8575a235a824690fda94674c88',\n  '0xcd7989894bc033581532d2cd88da5db0a4b12859',\n  '0xe1573b9d29e2183b1af0e743dc2754979a40d237',\n  '0x45804880de22913dafe09f4980848ece6ecbaf78',\n  '0x709f7b10f22eb62b05913b59b92ddd372d4e2152',\n]\n\n// tokens that should be tracked but arent due to lag in subgraph\n// all pairs that include token will be tracked\nexport const TRACKED_OVERRIDES_TOKENS = ['0x956f47f50a910163d8bf957cf5846d573e7f87ca']\n","import gql from 'graphql-tag'\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\n\nexport const SUBGRAPH_HEALTH = gql`\n  query health {\n    indexingStatusForCurrentVersion(subgraphName: \"FXSwapAnalytics\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }\n` // Added by - Issei\n\nexport const GET_BLOCK = gql`\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }\n`\n\nexport const GET_BLOCKS = (timestamps) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \n        liquidityTokenBalance\n        pair  {\n          id\n          totalSupply\n          reserveUSD\n        }\n      }\n    `\n  )\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const TOP_LPS_PER_PAIRS = gql`\n  query lps($pair: Bytes!) {\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        token0Price\n        token1Price\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const SHARE_VALUE = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        reserve0\n        reserve1\n        reserveUSD\n        totalSupply \n        token0{\n          derivedETH\n        }\n        token1{\n          derivedETH\n        }\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const ETH_PRICE = (block) => {\n  const queryString = block\n    ? `\n    query bundles {\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\n        id\n        ethPrice\n      }\n    }\n  `\n    : ` query bundles {\n      bundles(where: { id: ${BUNDLE_ID} }) {\n        id\n        ethPrice\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const USER = (block, account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\", block: {number: ${block}}) {\n        liquidityPositions\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\n  query events($user: Bytes!, $pair: Bytes!) {\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const FIRST_SNAPSHOT = gql`\n  query snapshots($user: Bytes!) {\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }\n`\n\nexport const USER_HISTORY = gql`\n  query snapshots($user: Bytes!, $skip: Int!) {\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const USER_POSITIONS = gql`\n  query liquidityPositions($user: Bytes!) {\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const USER_TRANSACTIONS = gql`\n  query transactions($user: Bytes!) {\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n\nexport const PAIR_CHART = gql`\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA = gql`\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  const queryString = `\n    query days {\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\n        id\n        pairAddress\n        date\n        dailyVolumeToken0\n        dailyVolumeToken1\n        dailyVolumeUSD\n        totalSupply\n        reserveUSD\n      }\n    } \n`\n  return gql(queryString)\n}\n\nexport const GLOBAL_CHART = gql`\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }\n`\n\nexport const GLOBAL_DATA = (block) => {\n  const queryString = ` query uniswapFactories {\n      uniswapFactories(\n       ${block ? `block: { number: ${block}}` : ``} \n       where: { id: \"${FACTORY_ADDRESS}\" }) {\n        id\n        totalVolumeUSD\n        totalVolumeETH\n        untrackedVolumeUSD\n        totalLiquidityUSD\n        totalLiquidityETH\n        txCount\n        pairCount\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const GLOBAL_TXNS = gql`\n  query transactions {\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }\n`\n\nexport const ALL_TOKENS = gql`\n  query tokens($skip: Int!) {\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }\n`\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }\n`\n\nexport const PAIR_SEARCH = gql`\n  query pairs($tokens: [Bytes]!, $id: String) {\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nexport const ALL_PAIRS = gql`\n  query pairs($skip: Int!) {\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nconst PairFields = `\n  fragment PairFields on Pair {\n    id\n    txCount\n    token0 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    token1 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    reserve0\n    reserve1\n    reserveUSD\n    totalSupply\n    trackedReserveETH\n    reserveETH\n    volumeUSD\n    untrackedVolumeUSD\n    token0Price\n    token1Price\n    createdAtTimestamp\n  }\n`\n\nexport const PAIRS_CURRENT = gql`\n  query pairs {\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\nexport const PAIR_DATA = (pairAddress, block) => {\n  const queryString = `\n    ${PairFields}\n    query pairs {\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\n        ...PairFields\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const MINING_POSITIONS = (account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\") {\n        miningPosition {\n          id\n          user {\n            id\n          }\n          miningPool {\n              pair {\n                id\n                token0\n                token1\n              }\n          }\n          balance\n        }\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const PAIRS_BULK = gql`\n  ${PairFields}\n  query pairs($allPairs: [Bytes]!) {\n    pairs(first: 500, where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\n      ...PairFields\n    }\n  }\n`\n\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  let queryString = `\n  query pairs {\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      reserveUSD\n      trackedReserveETH\n      volumeUSD\n      untrackedVolumeUSD\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_CHART = gql`\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }\n`\n\nconst TokenFields = `\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    derivedETH\n    tradeVolume\n    tradeVolumeUSD\n    untrackedVolumeUSD\n    totalLiquidity\n    txCount\n  }\n`\n\n// used for getting top tokens by daily volume\nexport const TOKEN_TOP_DAY_DATAS = gql`\n  query tokenDayDatas($date: Int) {\n    tokenDayDatas(first: 50, orderBy: totalLiquidityUSD, orderDirection: desc, where: { date_gt: $date }) {\n      id\n      date\n    }\n  }\n`\n\nexport const TOKENS_BULK = gql`\n  ${TokenFields}\n  query tokens($tokenAddresses: [Bytes]!) {\n    pairs(where: { id_in: $tokenAddresses }) {\n      ...TokenFields\n    }\n  }\n`\nexport const TOKENS_HISTORICAL_BULK = (tokens, block) => {\n  let tokenString = `[`\n  tokens.map((token) => {\n    return (tokenString += `\"${token}\",`)\n  })\n  tokenString += ']'\n  let queryString = `\n  query tokens {\n    tokens(first: 50, where: {id_in: ${tokenString}}, ${block ? 'block: {number: ' + block + '}' : ''}  ) {\n      id\n      name\n      symbol\n      derivedETH\n      tradeVolume\n      tradeVolumeUSD\n      untrackedVolumeUSD\n      totalLiquidity\n      txCount\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKENS_CURRENT = gql`\n  ${TokenFields}\n  query tokens {\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      ...TokenFields\n    }\n  }\n`\n\nexport const TOKENS_DYNAMIC = (block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n        ...TokenFields\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_DATA = (tokenAddress, block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\n        ...TokenFields\n      }\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const FILTERED_TRANSACTIONS = gql`\n  query ($allPairs: [Bytes]!) {\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\n\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nfunction uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return ['https' + uri.substr(4), uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n */\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\n  const urls = uriToHttp(listUrl)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.debug('Failed to fetch list', listUrl, error)\n\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n\n    return json\n  }\n  // throw new Error('Unrecognized list URL protocol.')\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport getTokenList from '../utils/tokenLists'\nimport { healthClient } from '../apollo/client'\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\ndayjs.extend(utc)\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\n\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\nconst TIME_KEY = 'TIME_KEY'\nconst CURRENCY = 'CURRENCY'\nconst SESSION_START = 'SESSION_START'\nconst LATEST_BLOCK = 'LATEST_BLOCK'\nconst HEAD_BLOCK = 'HEAD_BLOCK'\n\nconst ApplicationContext = createContext()\n\nfunction useApplicationContext() {\n  return useContext(ApplicationContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { currency } = payload\n      return {\n        ...state,\n        [CURRENCY]: currency,\n      }\n    }\n    case UPDATE_TIMEFRAME: {\n      const { newTimeFrame } = payload\n      return {\n        ...state,\n        [TIME_KEY]: newTimeFrame,\n      }\n    }\n    case UPDATE_SESSION_START: {\n      const { timestamp } = payload\n      return {\n        ...state,\n        [SESSION_START]: timestamp,\n      }\n    }\n\n    case UPDATE_LATEST_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [LATEST_BLOCK]: block,\n      }\n    }\n\n    case UPDATE_HEAD_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [HEAD_BLOCK]: block,\n      }\n    }\n\n    case UPDATED_SUPPORTED_TOKENS: {\n      const { supportedTokens } = payload\n      return {\n        ...state,\n        [SUPPORTED_TOKENS]: supportedTokens,\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {\n  CURRENCY: 'USD',\n  TIME_KEY: timeframeOptions.ALL_TIME,\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  const update = useCallback((currency) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        currency,\n      },\n    })\n  }, [])\n\n  // global time window for charts - see timeframe options in constants\n  const updateTimeframe = useCallback((newTimeFrame) => {\n    dispatch({\n      type: UPDATE_TIMEFRAME,\n      payload: {\n        newTimeFrame,\n      },\n    })\n  }, [])\n\n  // used for refresh button\n  const updateSessionStart = useCallback((timestamp) => {\n    dispatch({\n      type: UPDATE_SESSION_START,\n      payload: {\n        timestamp,\n      },\n    })\n  }, [])\n\n  const updateSupportedTokens = useCallback((supportedTokens) => {\n    dispatch({\n      type: UPDATED_SUPPORTED_TOKENS,\n      payload: {\n        supportedTokens,\n      },\n    })\n  }, [])\n\n  const updateLatestBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_LATEST_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  const updateHeadBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_HEAD_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  return (\n    <ApplicationContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateSessionStart,\n            updateTimeframe,\n            updateSupportedTokens,\n            updateLatestBlock,\n            updateHeadBlock,\n          },\n        ],\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\n      )}\n    >\n      {children}\n    </ApplicationContext.Provider>\n  )\n}\n\nexport function useLatestBlocks() {\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\n\n  const latestBlock = state?.[LATEST_BLOCK]\n  const headBlock = state?.[HEAD_BLOCK]\n\n  useEffect(() => {\n    async function fetch() {\n      healthClient\n        .query({\n          query: SUBGRAPH_HEALTH,\n        })\n        .then((res) => {\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\n          if (syncedBlock && headBlock) {\n            updateLatestBlock(syncedBlock)\n            updateHeadBlock(headBlock)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!latestBlock) {\n      fetch()\n    }\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\n\n  return [latestBlock, headBlock]\n}\n\nexport function useCurrentCurrency() {\n  const [state, { update }] = useApplicationContext()\n  const toggleCurrency = useCallback(() => {\n    if (state.currency === 'ETH') {\n      update('USD')\n    } else {\n      update('ETH')\n    }\n  }, [state, update])\n  return [state[CURRENCY], toggleCurrency]\n}\n\nexport function useTimeframe() {\n  const [state, { updateTimeframe }] = useApplicationContext()\n  const activeTimeframe = state?.[`TIME_KEY`]\n  return [activeTimeframe, updateTimeframe]\n}\n\nexport function useStartTimestamp() {\n  const [activeWindow] = useTimeframe()\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    let startTime =\n      dayjs\n        .utc()\n        .subtract(\n          1,\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\n        )\n        .startOf('day')\n        .unix() - 1\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\n    setStartDateTimestamp(startTime)\n  }, [activeWindow, startDateTimestamp])\n\n  return startDateTimestamp\n}\n\n// keep track of session length for refresh ticker\nexport function useSessionStart() {\n  const [state, { updateSessionStart }] = useApplicationContext()\n  const sessionStart = state?.[SESSION_START]\n\n  useEffect(() => {\n    if (!sessionStart) {\n      updateSessionStart(Date.now())\n    }\n  })\n\n  const [seconds, setSeconds] = useState(0)\n\n  useEffect(() => {\n    let interval = null\n    interval = setInterval(() => {\n      setSeconds(Date.now() - sessionStart ?? Date.now())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [seconds, sessionStart])\n\n  return parseInt(seconds / 1000)\n}\n\nexport function useListedTokens() {\n  const [state, { updateSupportedTokens }] = useApplicationContext()\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\n\n  useEffect(() => {\n    async function fetchList() {\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\n        const tokensSoFar = await fetchedTokens\n        const newTokens = await getTokenList(url)\n        if (newTokens?.tokens) {\n          return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\n        }\n      }, Promise.resolve([]))\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\n      updateSupportedTokens(formatted)\n    }\n    if (!supportedTokens) {\n      try {\n        fetchList()\n      } catch {\n        console.log('Error fetching')\n      }\n    }\n  }, [updateSupportedTokens, supportedTokens])\n\n  return supportedTokens\n}\n","import React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport dayjs from 'dayjs'\nimport { ethers } from 'ethers'\nimport utc from 'dayjs/plugin/utc'\nimport { client, blockClient } from '../apollo/client'\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\nimport { Text } from 'rebass'\nimport _Decimal from 'decimal.js-light'\nimport toFormat from 'toformat'\nimport { timeframeOptions } from '../constants'\nimport Numeral from 'numeral'\n\n// format libraries\nconst Decimal = toFormat(_Decimal)\nBigNumber.set({ EXPONENTIAL_AT: 50 })\ndayjs.extend(utc)\n\nexport function getTimeframe(timeWindow) {\n  const utcEndTime = dayjs.utc()\n  // based on window, get starttime\n  let utcStartTime\n  switch (timeWindow) {\n    case timeframeOptions.WEEK:\n      utcStartTime = utcEndTime.subtract(1, 'week').endOf('day').unix() - 1\n      break\n    case timeframeOptions.MONTH:\n      utcStartTime = utcEndTime.subtract(1, 'month').endOf('day').unix() - 1\n      break\n    case timeframeOptions.ALL_TIME:\n      utcStartTime = utcEndTime.subtract(1, 'year').endOf('day').unix() - 1\n      break\n    default:\n      utcStartTime = utcEndTime.subtract(1, 'year').startOf('year').unix() - 1\n      break\n  }\n  return utcStartTime\n}\n\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\n  if (!token1Address) {\n    return (\n      `https://fx-swap.io/#/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token0Address}/${'FX'}`\n      // `/v2/${token0Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token0Address}/${'FX'}`\n    )\n  } else {\n    return (\n      `https://fx-swap.io/#/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token0Address}/${\n        // `/v2/${token0Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token0Address}/${\n        token1Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token1Address\n      }`\n    )\n  }\n}\n\nexport function getSwapLink(token0Address, token1Address = null) {\n  if (!token1Address) {\n    return `https://fx-swap.io/#/swap?inputCurrency=${token0Address}`\n  } else {\n    return `https://fx-swap.io/#/swap?inputCurrency=${\n      token0Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token0Address\n    }&outputCurrency=${token1Address === '0x3452e23f9c4cc62c70b7adad699b264af3549c19' ? 'FX' : token1Address}`\n  }\n}\n\nexport function getMiningPoolLink(token0Address) {\n  return `https://fx-swap.io/#/uni/FX/${token0Address}`\n}\n\nexport function getUniswapAppLink(linkVariable) {\n  let baseUniswapUrl = 'https://fx-swap.io/#/uni'\n  if (!linkVariable) {\n    return baseUniswapUrl\n  }\n\n  return `${baseUniswapUrl}/FX/${linkVariable}`\n}\n\nexport function localNumber(val) {\n  return Numeral(val).format('0,0')\n}\n\nexport const toNiceDate = (date) => {\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\n  return x\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address, chars = 4) {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\nexport const toWeeklyDate = (date) => {\n  const formatted = dayjs.utc(dayjs.unix(date))\n  date = new Date(formatted)\n  const day = new Date(formatted).getDay()\n  var lessDays = day === 6 ? 0 : day + 1\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\n}\n\nexport function getTimestampsForChanges() {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n\n  while (!allFound) {\n    let end = list.length\n    if (skip + skipCount < list.length) {\n      end = skip + skipCount\n    }\n    let sliced = list.slice(skip, end)\n    let result = await localClient.query({\n      query: query(...vars, sliced),\n      fetchPolicy: 'cache-first',\n    })\n    fetchedData = {\n      ...fetchedData,\n      ...result.data,\n    }\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n      allFound = true\n    } else {\n      skip += skipCount\n    }\n  }\n\n  return fetchedData\n}\n\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\nexport async function getBlockFromTimestamp(timestamp) {\n  let result = await blockClient.query({\n    query: GET_BLOCK,\n    variables: {\n      timestampFrom: timestamp,\n      timestampTo: timestamp + 600,\n    },\n    fetchPolicy: 'cache-first',\n  })\n\n  return result?.data?.blocks?.[0]?.number\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  let blocks = []\n  if (fetchedData) {\n    for (var t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n\n  return blocks\n}\n\n// export async function getLiquidityTokenBalanceOvertime(account, timestamps) {\n//   // get blocks based on timestamps\n//   const blocks = await getBlocksFromTimestamps(timestamps)\n\n//   // get historical share values with time travel queries\n//   let result = await client.query({\n//     query: SHARE_VALUE(account, blocks),\n//     fetchPolicy: 'cache-first',\n//   })\n\n//   let values = []\n//   for (var row in result?.data) {\n//     let timestamp = row.split('t')[1]\n//     if (timestamp) {\n//       values.push({\n//         timestamp,\n//         balance: 0,\n//       })\n//     }\n//   }\n// }\n\n/**\n * @notice Example query using time travel queries\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\n * @param {String} pairAddress\n * @param {Array} timestamps\n */\nexport async function getShareValueOverTime(pairAddress, timestamps) {\n  if (!timestamps || timestamps.length == 0) {\n    //if (!timestamps) {\n    // added by Issei (timestamps.length == 0)\n    const utcCurrentTime = dayjs()\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\n  }\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(timestamps)\n\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(pairAddress, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\n    if (timestamp) {\n      values.push({\n        timestamp,\n        sharePriceUsd,\n        totalSupply: result.data[row].totalSupply,\n        reserve0: result.data[row].reserve0,\n        reserve1: result.data[row].reserve1,\n        reserveUSD: result.data[row].reserveUSD,\n        token0DerivedETH: result.data[row].token0.derivedETH,\n        token1DerivedETH: result.data[row].token1.derivedETH,\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\n        ethPrice: 0,\n        token0PriceUSD: 0,\n        token1PriceUSD: 0,\n      })\n    }\n  }\n\n  // add eth prices\n  let index = 0\n  for (var brow in result?.data) {\n    let timestamp = brow.split('b')[1]\n    if (timestamp) {\n      values[index].ethPrice = result.data[brow].ethPrice\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\n      index += 1\n    }\n  }\n\n  return values\n}\n\n/**\n * @notice Creates an evenly-spaced array of timestamps\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\n * @param {Int} timestamp_from in seconds\n * @param {Int} period_length in seconds\n * @param {Int} periods\n */\nexport function getTimestampRange(timestamp_from, period_length, periods) {\n  let timestamps = []\n  for (let i = 0; i <= periods; i++) {\n    timestamps.push(timestamp_from + i * period_length)\n  }\n  return timestamps\n}\n\nexport const toNiceDateYear = (date) => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\n\nexport const isAddress = (value) => {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase())\n  } catch {\n    return false\n  }\n}\n\nexport const toK = (num) => {\n  return Numeral(num).format('0.[00]a')\n}\n\nexport const setThemeColor = (theme) => document.documentElement.style.setProperty('--c-token', theme || '#333333')\n\nexport const Big = (number) => new BigNumber(number)\n\nexport const urls = {\n  showTransaction: (tx) => `https://testnet-fxscan.functionx.io/tx/${tx}/`,\n  showAddress: (address) => `https://testnet-fxscan.functionx.io/address/${address}/`,\n  showToken: (address) => `https://testnet-fxscan.functionx.io/token/${address}/`,\n  showBlock: (block) => `https://testnet-fxscan.functionx.io/block/${block}/`,\n}\n\nexport const formatTime = (unix) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(unix)\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n\nexport const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num, digits) => {\n  const formatter = new Intl.NumberFormat([], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  })\n  return formatter.format(num)\n}\n\nexport const toSignificant = (number, significantDigits) => {\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\n}\n\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0' : 0\n  }\n  let num = parseFloat(number)\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarAmount(num, 4)\n    } else {\n      return formatDollarAmount(num, 2)\n    }\n  }\n\n  return Number(parseFloat(num).toFixed(4)).toString()\n}\n\nexport function rawPercent(percentRaw) {\n  let percent = parseFloat(percentRaw * 100)\n  if (!percent || percent === 0) {\n    return '0%'\n  }\n  if (percent < 1 && percent > 0) {\n    return '< 1%'\n  }\n  return percent.toFixed(0) + '%'\n}\n\nexport function formattedPercent(percent, useBrackets = false) {\n  percent = parseFloat(percent)\n  if (!percent || percent === 0) {\n    return <Text fontWeight={500}>0%</Text>\n  }\n\n  if (percent < 0.0001 && percent > 0) {\n    return (\n      <Text fontWeight={500} color=\"green\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  if (percent < 0 && percent > -0.0001) {\n    return (\n      <Text fontWeight={500} color=\"red\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  let fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  if (fixedPercent > 0) {\n    if (fixedPercent > 100) {\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\n    } else {\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\n    }\n  } else {\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\n  }\n}\n\n/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\n  // get volume info for both 24 hour periods\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0\n  }\n  return adjustedPercentChange\n}\n\nexport function isEquivalent(a, b) {\n  var aProps = Object.getOwnPropertyNames(a)\n  var bProps = Object.getOwnPropertyNames(b)\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i]\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n  return true\n}\n","interface BasicData {\n  token0?: {\n    id: string\n    name: string\n    symbol: string\n  }\n  token1?: {\n    id: string\n    name: string\n    symbol: string\n  }\n}\n\n// Override data return from graph - usually because proxy token has changed\n// names since entitiy was created in subgraph\n// keys are lowercase token addresses <--------\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\n  // '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\n  //   name: 'Ether (Wrapped)',\n  //   symbol: 'ETH',\n  // },\n  '0x3452e23f9c4cc62c70b7adad699b264af3549c19': {\n    name: 'Function X (Wrapped)',\n    symbol: 'FX',\n  },\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\n    name: 'Energi',\n    symbol: 'NRGE',\n  },\n}\n\n// override tokens with incorrect symbol or names\nexport function updateNameData(data: BasicData): BasicData | undefined {\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\n  }\n\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\n  }\n\n  return data\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  PAIR_DATA,\n  PAIR_CHART,\n  FILTERED_TRANSACTIONS,\n  PAIRS_CURRENT,\n  PAIRS_BULK,\n  PAIRS_HISTORICAL_BULK,\n  HOURLY_PAIR_RATES,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  getPercentChange,\n  get2DayPercentChange,\n  isAddress,\n  getBlocksFromTimestamps,\n  getTimestampsForChanges,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions, TRACKED_OVERRIDES_PAIRS, TRACKED_OVERRIDES_TOKENS } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\n\ndayjs.extend(utc)\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\n        object\n      )\n    : null\n}\n\nconst PairDataContext = createContext()\n\nfunction usePairDataContext() {\n  return useContext(PairDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { pairAddress, data } = payload\n      return {\n        ...state,\n        [pairAddress]: {\n          ...state?.[pairAddress],\n          ...data,\n        },\n      }\n    }\n\n    case UPDATE_TOP_PAIRS: {\n      const { topPairs } = payload\n      let added = {}\n      topPairs.map((pair) => {\n        return (added[pair.id] = pair)\n      })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_PAIR_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_HOURLY_DATA: {\n      const { address, hourlyData, timeWindow } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          hourlyData: {\n            ...state?.[address]?.hourlyData,\n            [timeWindow]: hourlyData,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  // update pair specific data\n  const update = useCallback((pairAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopPairs = useCallback((topPairs) => {\n    dispatch({\n      type: UPDATE_TOP_PAIRS,\n      payload: {\n        topPairs,\n      },\n    })\n  }, [])\n\n  const updatePairTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_PAIR_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\n    dispatch({\n      type: UPDATE_HOURLY_DATA,\n      payload: { address, hourlyData, timeWindow },\n    })\n  }, [])\n\n  return (\n    <PairDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updatePairTxns,\n            updateChartData,\n            updateTopPairs,\n            updateHourlyData,\n          },\n        ],\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\n      )}\n    >\n      {children}\n    </PairDataContext.Provider>\n  )\n}\n\nasync function getBulkPairData(pairList, ethPrice) {\n  const [t1, t2, tWeek] = getTimestampsForChanges()\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\n\n  try {\n    let current = await client.query({\n      query: PAIRS_BULK,\n      variables: {\n        allPairs: pairList,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\n      [b1, b2, bWeek].map(async (block) => {\n        let result = client.query({\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\n          fetchPolicy: 'cache-first',\n        })\n        return result\n      })\n    )\n\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let pairData = await Promise.all(\n      current &&\n        current.data.pairs.map(async (pair) => {\n          let data = pair\n          let oneDayHistory = oneDayData?.[pair.id]\n          if (!oneDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b1),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = newData.data.pairs[0]\n          }\n          let twoDayHistory = twoDayData?.[pair.id]\n          if (!twoDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b2),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = newData.data.pairs[0]\n          }\n          let oneWeekHistory = oneWeekData?.[pair.id]\n          if (!oneWeekHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, bWeek),\n              fetchPolicy: 'cache-first',\n            })\n            oneWeekHistory = newData.data.pairs[0]\n          }\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\n          return data\n        })\n    )\n    return pairData\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\n  const pairAddress = data.id\n\n  // get volume changes\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n    data?.volumeUSD,\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\n  )\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\n    data?.untrackedVolumeUSD,\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\n  )\n\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\n\n  const oneWeekVolumeUntracked = parseFloat(\n    oneWeekData ? data?.untrackedVolumeUSD - oneWeekData?.untrackedVolumeUSD : data.untrackedVolumeUSD\n  )\n\n  // set volume properties\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\n  data.volumeChangeUSD = volumeChangeUSD\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\n  data.oneWeekVolumeUntracked = oneWeekVolumeUntracked\n  data.volumeChangeUntracked = volumeChangeUntracked\n\n  // set liquidity properties\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\n\n  // format if pair hasnt existed for a day or a week\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneDayData && data) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneWeekData && data) {\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\n  }\n\n  if (\n    TRACKED_OVERRIDES_PAIRS.includes(pairAddress) ||\n    TRACKED_OVERRIDES_TOKENS.includes(data.token0.id) ||\n    TRACKED_OVERRIDES_TOKENS.includes(data.token1.id)\n  ) {\n    data.oneDayVolumeUSD = oneDayVolumeUntracked\n    data.oneWeekVolumeUSD = oneWeekVolumeUntracked\n    data.volumeChangeUSD = volumeChangeUntracked\n    data.trackedReserveUSD = data.reserveUSD\n  }\n\n  // format incorrect names\n  updateNameData(data)\n\n  return data\n}\n\nconst getPairTransactions = async (pairAddress) => {\n  const transactions = {}\n\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: [pairAddress],\n      },\n      fetchPolicy: 'no-cache',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\nconst getPairChartData = async (pairAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\n  let startTime = utcStartTime.unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: PAIR_CHART,\n        variables: {\n          pairAddress: pairAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.pairDayDatas)\n      if (result.data.pairDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\n    })\n\n    if (data[0]) {\n      // fill in empty days\n      let timestamp = data[0].date ? data[0].date : startTime\n      let latestLiquidityUSD = data[0].reserveUSD\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dayString: nextDay,\n            dailyVolumeUSD: 0,\n            reserveUSD: latestLiquidityUSD,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\n  try {\n    const utcEndTime = dayjs.utc()\n    let time = startTime\n\n    // create an array of hour start times until we reach current hour\n    const timestamps = []\n    while (time <= utcEndTime.unix() - 3600) {\n      timestamps.push(time)\n      time += 3600\n    }\n\n    // backout if invalid timestamp format\n    if (timestamps.length === 0) {\n      return []\n    }\n\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n    let blocks\n\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks?.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      if (timestamp) {\n        values.push({\n          timestamp,\n          rate0: parseFloat(result[row]?.token0Price),\n          rate1: parseFloat(result[row]?.token1Price),\n        })\n      }\n    }\n\n    let formattedHistoryRate0 = []\n    let formattedHistoryRate1 = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistoryRate0.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate0),\n        close: parseFloat(values[i + 1].rate0),\n      })\n      formattedHistoryRate1.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate1),\n        close: parseFloat(values[i + 1].rate1),\n      })\n    }\n\n    return [formattedHistoryRate0, formattedHistoryRate1]\n  } catch (e) {\n    console.log(e)\n    return [[], []]\n  }\n}\n\nexport function Updater() {\n  const [, { updateTopPairs }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs by reserves\n      let {\n        data: { pairs },\n      } = await client.query({\n        query: PAIRS_CURRENT,\n        fetchPolicy: 'cache-first',\n      })\n\n      // format as array of addresses\n      const formattedPairs = pairs.map((pair) => {\n        return pair.id\n      })\n\n      // get data for every pair in list\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\n      topPairs && updateTopPairs(topPairs)\n    }\n    ethPrice && getData()\n  }, [ethPrice, updateTopPairs])\n  return null\n}\n\nexport function useHourlyRateData(pairAddress, timeWindow) {\n  const [state, { updateHourlyData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\n      updateHourlyData(pairAddress, data, timeWindow)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\n\n  return chartData\n}\n\n/**\n * @todo\n * store these updates to reduce future redundant calls\n */\nexport function useDataForList(pairList) {\n  const [state] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n\n  const [stale, setStale] = useState(false)\n  const [fetched, setFetched] = useState([])\n\n  // reset\n  useEffect(() => {\n    if (pairList) {\n      setStale(false)\n      setFetched()\n    }\n  }, [pairList])\n\n  useEffect(() => {\n    async function fetchNewPairData() {\n      let newFetched = []\n      let unfetched = []\n\n      pairList.map(async (pair) => {\n        let currentData = state?.[pair.id]\n        if (!currentData) {\n          unfetched.push(pair.id)\n        } else {\n          newFetched.push(currentData)\n        }\n      })\n\n      let newPairData = await getBulkPairData(\n        unfetched.map((pair) => {\n          return pair\n        }),\n        ethPrice\n      )\n      setFetched(newFetched.concat(newPairData))\n    }\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\n      setStale(true)\n      fetchNewPairData()\n    }\n  }, [ethPrice, state, pairList, stale, fetched])\n\n  let formattedFetch =\n    fetched &&\n    fetched.reduce((obj, cur) => {\n      return { ...obj, [cur?.id]: cur }\n    }, {})\n\n  return formattedFetch\n}\n\n/**\n * Get all the current and 24hr changes for a pair\n */\nexport function usePairData(pairAddress) {\n  const [state, { update }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  const pairData = state?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!pairData && pairAddress) {\n        let data = await getBulkPairData([pairAddress], ethPrice)\n        data && update(pairAddress, data[0])\n      }\n    }\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\n      fetchData()\n    }\n  }, [pairAddress, pairData, update, ethPrice])\n\n  return pairData || {}\n}\n\n/**\n * Get most recent txns for a pair\n */\nexport function usePairTransactions(pairAddress) {\n  const [state, { updatePairTxns }] = usePairDataContext()\n  const pairTxns = state?.[pairAddress]?.txns\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!pairTxns) {\n        let transactions = await getPairTransactions(pairAddress)\n        updatePairTxns(pairAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [pairTxns, pairAddress, updatePairTxns])\n  return pairTxns\n}\n\nexport function usePairChartData(pairAddress) {\n  const [state, { updateChartData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.chartData\n\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getPairChartData(pairAddress)\n        updateChartData(pairAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, pairAddress, updateChartData])\n  return chartData\n}\n\n/**\n * Get list of all pairs in Uniswap\n */\nexport function useAllPairData() {\n  const [state] = usePairDataContext()\n  return state || {}\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useTimeframe } from './Application'\nimport {\n  getPercentChange,\n  getBlockFromTimestamp,\n  getBlocksFromTimestamps,\n  get2DayPercentChange,\n  getTimeframe,\n} from '../utils'\nimport {\n  GLOBAL_DATA,\n  GLOBAL_TXNS,\n  GLOBAL_CHART,\n  ETH_PRICE,\n  ALL_PAIRS,\n  ALL_TOKENS,\n  TOP_LPS_PER_PAIRS,\n} from '../apollo/queries'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport { useAllPairData } from './PairData'\nimport { useTokenChartDataCombined } from './TokenData'\nconst UPDATE = 'UPDATE'\nconst UPDATE_TXNS = 'UPDATE_TXNS'\nconst UPDATE_CHART = 'UPDATE_CHART'\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\nconst UPDATE_ALL_PAIRS_IN_UNISWAP = 'UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS'\nconst UPDATE_ALL_TOKENS_IN_UNISWAP = 'UPDATE_ALL_TOKENS_IN_UNISWAP'\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\n\nconst offsetVolumes = [\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\n]\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nconst GlobalDataContext = createContext()\n\nfunction useGlobalDataContext() {\n  return useContext(GlobalDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { data } = payload\n      return {\n        ...state,\n        globalData: data,\n      }\n    }\n    case UPDATE_TXNS: {\n      const { transactions } = payload\n      return {\n        ...state,\n        transactions,\n      }\n    }\n    case UPDATE_CHART: {\n      const { daily, weekly } = payload\n      return {\n        ...state,\n        chartData: {\n          daily,\n          weekly,\n        },\n      }\n    }\n    case UPDATE_ETH_PRICE: {\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\n      return {\n        [ETH_PRICE_KEY]: ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      }\n    }\n\n    case UPDATE_ALL_PAIRS_IN_UNISWAP: {\n      const { allPairs } = payload\n      return {\n        ...state,\n        allPairs,\n      }\n    }\n\n    case UPDATE_ALL_TOKENS_IN_UNISWAP: {\n      const { allTokens } = payload\n      return {\n        ...state,\n        allTokens,\n      }\n    }\n\n    case UPDATE_TOP_LPS: {\n      const { topLps } = payload\n      return {\n        ...state,\n        topLps,\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        data,\n      },\n    })\n  }, [])\n\n  const updateTransactions = useCallback((transactions) => {\n    dispatch({\n      type: UPDATE_TXNS,\n      payload: {\n        transactions,\n      },\n    })\n  }, [])\n\n  const updateChart = useCallback((daily, weekly) => {\n    dispatch({\n      type: UPDATE_CHART,\n      payload: {\n        daily,\n        weekly,\n      },\n    })\n  }, [])\n\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\n    dispatch({\n      type: UPDATE_ETH_PRICE,\n      payload: {\n        ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      },\n    })\n  }, [])\n\n  const updateAllPairsInUniswap = useCallback((allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS_IN_UNISWAP,\n      payload: {\n        allPairs,\n      },\n    })\n  }, [])\n\n  const updateAllTokensInUniswap = useCallback((allTokens) => {\n    dispatch({\n      type: UPDATE_ALL_TOKENS_IN_UNISWAP,\n      payload: {\n        allTokens,\n      },\n    })\n  }, [])\n\n  const updateTopLps = useCallback((topLps) => {\n    dispatch({\n      type: UPDATE_TOP_LPS,\n      payload: {\n        topLps,\n      },\n    })\n  }, [])\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTransactions,\n            updateChart,\n            updateEthPrice,\n            updateTopLps,\n            updateAllPairsInUniswap,\n            updateAllTokensInUniswap,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTransactions,\n          updateTopLps,\n          updateChart,\n          updateEthPrice,\n          updateAllPairsInUniswap,\n          updateAllTokensInUniswap,\n        ]\n      )}\n    >\n      {children}\n    </GlobalDataContext.Provider>\n  )\n}\n\n/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */\n\nasync function getGlobalData(ethPrice, oldEthPrice) {\n  // data for each day , historic data used for % changes\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // get timestamps for the days\n    const utcCurrentTime = dayjs()\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\n\n    // get the blocks needed for time travel queries\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\n      utcOneDayBack,\n      utcTwoDaysBack,\n      utcOneWeekBack,\n      utcTwoWeeksBack,\n    ])\n\n    // fetch the global data\n    let result = await client.query({\n      query: GLOBAL_DATA(),\n      fetchPolicy: 'cache-first',\n    })\n    data = result.data.uniswapFactories[0]\n\n    // fetch the historical data\n    let oneDayResult = await client.query({\n      query: GLOBAL_DATA(oneDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.uniswapFactories[0]\n\n    let twoDayResult = await client.query({\n      query: GLOBAL_DATA(twoDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.uniswapFactories[0]\n\n    let oneWeekResult = await client.query({\n      query: GLOBAL_DATA(oneWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const oneWeekData = oneWeekResult.data.uniswapFactories[0]\n\n    let twoWeekResult = await client.query({\n      query: GLOBAL_DATA(twoWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const twoWeekData = twoWeekResult.data.uniswapFactories[0]\n\n    if (data && oneDayData && twoDayData && twoWeekData) {\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneDayData.totalVolumeUSD,\n        twoDayData.totalVolumeUSD\n      )\n\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneWeekData.totalVolumeUSD,\n        twoWeekData.totalVolumeUSD\n      )\n\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\n        data.txCount,\n        oneDayData.txCount ? oneDayData.txCount : 0,\n        twoDayData.txCount ? twoDayData.txCount : 0\n      )\n\n      // format the total liquidity in USD\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\n      const liquidityChangeUSD = getPercentChange(\n        data.totalLiquidityETH * ethPrice,\n        oneDayData.totalLiquidityETH * oldEthPrice\n      )\n\n      // add relevant fields with the calculated amounts\n      data.oneDayVolumeUSD = oneDayVolumeUSD\n      data.oneWeekVolume = oneWeekVolume\n      data.weeklyVolumeChange = weeklyVolumeChange\n      data.volumeChangeUSD = volumeChangeUSD\n      data.liquidityChangeUSD = liquidityChangeUSD\n      data.oneDayTxns = oneDayTxns\n      data.txnChange = txnChange\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\n/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */\n\nlet checked = false\n\nconst getChartData = async (oldestDateToFetch, offsetData) => {\n  let data = []\n  let weeklyData = []\n  const utcEndTime = dayjs.utc()\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      let result = await client.query({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: oldestDateToFetch,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.uniswapDayDatas)\n      if (result.data.uniswapDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    if (data) {\n      let dayIndexSet = new Set()\n      let dayIndexArray = []\n      const oneDay = 24 * 60 * 60\n\n      // for each day, parse the daily volume and format for chart array\n      data.forEach((dayData, i) => {\n        // add the day index to the set of days\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n        dayIndexArray.push(data[i])\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      })\n\n      // fill in empty days ( there will be no day datas if no trades made that day )\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\n      let latestDayDats = data[0].mostLiquidTokens\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dailyVolumeUSD: 0,\n            totalLiquidityUSD: latestLiquidityUSD,\n            mostLiquidTokens: latestDayDats,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    // format weekly data for weekly sized chunks\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n    let startIndexWeekly = -1\n    let currentWeek = -1\n\n    data.forEach((entry, i) => {\n      const date = data[i].date\n\n      // hardcoded fix for offset volume\n      offsetData &&\n        !checked &&\n        offsetData.map((dayData) => {\n          if (dayData[date]) {\n            data[i].dailyVolumeUSD = parseFloat(data[i].dailyVolumeUSD) - parseFloat(dayData[date].dailyVolumeUSD)\n          }\n          return true\n        })\n\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\n      if (week !== currentWeek) {\n        currentWeek = week\n        startIndexWeekly++\n      }\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\n      weeklyData[startIndexWeekly].date = data[i].date\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\n    })\n\n    if (!checked) {\n      checked = true\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return [data, weeklyData]\n}\n\n/**\n * Get and format transactions for global page\n */\nconst getGlobalTransactions = async () => {\n  let transactions = {}\n\n  try {\n    let result = await client.query({\n      query: GLOBAL_TXNS,\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = []\n    transactions.burns = []\n    transactions.swaps = []\n    result?.data?.transactions &&\n      result.data.transactions.map((transaction) => {\n        if (transaction.mints.length > 0) {\n          transaction.mints.map((mint) => {\n            return transactions.mints.push(mint)\n          })\n        }\n        if (transaction.burns.length > 0) {\n          transaction.burns.map((burn) => {\n            return transactions.burns.push(burn)\n          })\n        }\n        if (transaction.swaps.length > 0) {\n          transaction.swaps.map((swap) => {\n            return transactions.swaps.push(swap)\n          })\n        }\n        return true\n      })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\n/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */\nconst getEthPrice = async () => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n\n  let ethPrice = 0\n  let ethPriceOneDay = 0\n  let priceChangeETH = 0\n\n  try {\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n    let result = await client.query({\n      query: ETH_PRICE(),\n      fetchPolicy: 'cache-first',\n    })\n    let resultOneDay = await client.query({\n      query: ETH_PRICE(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\n    ethPrice = currentPrice\n    ethPriceOneDay = oneDayBackPrice\n  } catch (e) {\n    console.log(e)\n  }\n\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\n}\n\nconst PAIRS_TO_FETCH = 500\nconst TOKENS_TO_FETCH = 500\n\n/**\n * Loop through every pair on uniswap, used for search\n */\nasync function getAllPairsOnUniswap() {\n  try {\n    let allFound = false\n    let pairs = []\n    let skipCount = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_PAIRS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skipCount = skipCount + PAIRS_TO_FETCH\n      pairs = pairs.concat(result?.data?.pairs)\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\n        allFound = true\n      }\n    }\n    return pairs\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Loop through every token on uniswap, used for search\n */\nasync function getAllTokensOnUniswap() {\n  try {\n    let allFound = false\n    let skipCount = 0\n    let tokens = []\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_TOKENS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      tokens = tokens.concat(result?.data?.tokens)\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\n        allFound = true\n      }\n      skipCount = skipCount += TOKENS_TO_FETCH\n    }\n    return tokens\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */\nexport function useGlobalData() {\n  const [state, { update, updateAllPairsInUniswap, updateAllTokensInUniswap }] = useGlobalDataContext()\n  const [ethPrice, oldEthPrice] = useEthPrice()\n\n  const data = state?.globalData\n\n  // const combinedVolume = useTokenDataCombined(offsetVolumes)\n\n  useEffect(() => {\n    async function fetchData() {\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\n\n      globalData && update(globalData)\n\n      let allPairs = await getAllPairsOnUniswap()\n      updateAllPairsInUniswap(allPairs)\n\n      let allTokens = await getAllTokensOnUniswap()\n      updateAllTokensInUniswap(allTokens)\n    }\n    if (!data && ethPrice && oldEthPrice) {\n      fetchData()\n    }\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInUniswap, updateAllTokensInUniswap])\n\n  return data || {}\n}\n\nexport function useGlobalChartData() {\n  const [state, { updateChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n\n  const chartDataDaily = state?.chartData?.daily\n  const chartDataWeekly = state?.chartData?.weekly\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    // based on window, get starttime\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  // fix for rebass tokens\n\n  const combinedData = useTokenChartDataCombined(offsetVolumes)\n\n  /**\n   * Fetch data if none fetched or older data is needed\n   */\n  useEffect(() => {\n    async function fetchData() {\n      // historical stuff for chart\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch, combinedData)\n      updateChart(newChartData, newWeeklyData)\n    }\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly) && combinedData) {\n      fetchData()\n    }\n  }, [chartDataDaily, chartDataWeekly, combinedData, oldestDateFetch, updateChart])\n\n  return [chartDataDaily, chartDataWeekly]\n}\n\nexport function useGlobalTransactions() {\n  const [state, { updateTransactions }] = useGlobalDataContext()\n  const transactions = state?.transactions\n  useEffect(() => {\n    async function fetchData() {\n      if (!transactions) {\n        let txns = await getGlobalTransactions()\n        updateTransactions(txns)\n      }\n    }\n    fetchData()\n  }, [updateTransactions, transactions])\n  return transactions\n}\n\nexport function useEthPrice() {\n  const [state, { updateEthPrice }] = useGlobalDataContext()\n  const ethPrice = state?.[ETH_PRICE_KEY]\n  const ethPriceOld = state?.['oneDayPrice']\n  useEffect(() => {\n    async function checkForEthPrice() {\n      if (!ethPrice) {\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\n      }\n    }\n    checkForEthPrice()\n  }, [ethPrice, updateEthPrice])\n\n  return [ethPrice, ethPriceOld]\n}\n\nexport function useAllPairsInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allPairs = state?.allPairs\n\n  return allPairs || []\n}\n\nexport function useAllTokensInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allTokens = state?.allTokens\n\n  return allTokens || []\n}\n\n/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */\nexport function useTopLps() {\n  const [state, { updateTopLps }] = useGlobalDataContext()\n  let topLps = state?.topLps\n\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    async function fetchData() {\n      // get top 20 by reserves\n      let topPairs = Object.keys(allPairs)\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\n        ?.slice(0, 99)\n        .map((pair) => pair)\n\n      let topLpLists = await Promise.all(\n        topPairs.map(async (pair) => {\n          // for each one, fetch top LPs\n          try {\n            const { data: results } = await client.query({\n              query: TOP_LPS_PER_PAIRS,\n              variables: {\n                pair: pair.toString(),\n              },\n              fetchPolicy: 'cache-first',\n            })\n            if (results) {\n              return results.liquidityPositions\n            }\n          } catch (e) {}\n        })\n      )\n\n      // get the top lps from the results formatted\n      const topLps = []\n      topLpLists\n        .filter((i) => !!i) // check for ones not fetched correctly\n        .map((list) => {\n          return list.map((entry) => {\n            const pairData = allPairs[entry.pair.id]\n            return topLps.push({\n              user: entry.user,\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\n              pairAddress: entry.pair.id,\n              token0: pairData.token0.id,\n              token1: pairData.token1.id,\n              usd:\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\n                parseFloat(pairData.reserveUSD),\n            })\n          })\n        })\n\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\n      const shorter = sorted.splice(0, 100)\n      updateTopLps(shorter)\n    }\n\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\n      fetchData()\n    }\n  })\n\n  return topLps\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  TOKEN_DATA,\n  FILTERED_TRANSACTIONS,\n  TOKEN_CHART,\n  TOKEN_TOP_DAY_DATAS,\n  PRICES_BY_BLOCK,\n  PAIR_DATA,\n  TOKENS_HISTORICAL_BULK,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  get2DayPercentChange,\n  getPercentChange,\n  getBlockFromTimestamp,\n  isAddress,\n  getBlocksFromTimestamps,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\nconst UPDATE_COMBINED = 'UPDATE_COMBINED'\n\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\n\ndayjs.extend(utc)\n\nconst TokenDataContext = createContext()\n\nexport function useTokenDataContext() {\n  return useContext(TokenDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { tokenAddress, data } = payload\n      return {\n        ...state,\n        [tokenAddress]: {\n          ...state?.[tokenAddress],\n          ...data,\n        },\n      }\n    }\n    case UPDATE_TOP_TOKENS: {\n      const { topTokens } = payload\n      let added = {}\n      topTokens &&\n        topTokens.map((token) => {\n          return (added[token.id] = token)\n        })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_COMBINED: {\n      const { combinedVol } = payload\n      return {\n        ...state,\n        combinedVol,\n      }\n    }\n\n    case UPDATE_TOKEN_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_PRICE_DATA: {\n      const { address, data, timeWindow, interval } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [timeWindow]: {\n            ...state?.[address]?.[timeWindow],\n            [interval]: data,\n          },\n        },\n      }\n    }\n\n    case UPDATE_ALL_PAIRS: {\n      const { address, allPairs } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [TOKEN_PAIRS_KEY]: allPairs,\n        },\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((tokenAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        tokenAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopTokens = useCallback((topTokens) => {\n    dispatch({\n      type: UPDATE_TOP_TOKENS,\n      payload: {\n        topTokens,\n      },\n    })\n  }, [])\n\n  const updateCombinedVolume = useCallback((combinedVol) => {\n    dispatch({\n      type: UPDATE_COMBINED,\n      payload: {\n        combinedVol,\n      },\n    })\n  }, [])\n\n  const updateTokenTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_TOKEN_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateAllPairs = useCallback((address, allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS,\n      payload: { address, allPairs },\n    })\n  }, [])\n\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\n    dispatch({\n      type: UPDATE_PRICE_DATA,\n      payload: { address, data, timeWindow, interval },\n    })\n  }, [])\n\n  return (\n    <TokenDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTokenTxns,\n            updateChartData,\n            updateTopTokens,\n            updateAllPairs,\n            updatePriceData,\n            updateCombinedVolume,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTokenTxns,\n          updateCombinedVolume,\n          updateChartData,\n          updateTopTokens,\n          updateAllPairs,\n          updatePriceData,\n        ]\n      )}\n    >\n      {children}\n    </TokenDataContext.Provider>\n  )\n}\n\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  try {\n    // need to get the top tokens by liquidity by need token day datas\n    const currentDate = parseInt(Date.now() / 86400 / 1000) * 86400 - 86400\n\n    let tokenids = await client.query({\n      query: TOKEN_TOP_DAY_DATAS,\n      fetchPolicy: 'network-only',\n      variables: { date: currentDate },\n    })\n\n    const ids = tokenids?.data?.tokenDayDatas?.reduce((accum, entry) => {\n      accum.push(entry.id.slice(0, 42))\n      return accum\n    }, [])\n\n    let current = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayResult = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let twoDayResult = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let bulkResults = await Promise.all(\n      current &&\n        oneDayData &&\n        twoDayData &&\n        current?.data?.tokens.map(async (token) => {\n          let data = token\n\n          // let liquidityDataThisToken = liquidityData?.[token.id]\n          let oneDayHistory = oneDayData?.[token.id]\n          let twoDayHistory = twoDayData?.[token.id]\n\n          // catch the case where token wasnt in top list in previous days\n          if (!oneDayHistory) {\n            let oneDayResult = await client.query({\n              query: TOKEN_DATA(token.id, oneDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = oneDayResult.data.tokens[0]\n          }\n          if (!twoDayHistory) {\n            let twoDayResult = await client.query({\n              query: TOKEN_DATA(token.id, twoDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = twoDayResult.data.tokens[0]\n          }\n\n          // calculate percentage changes and daily changes\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n            data.tradeVolumeUSD,\n            oneDayHistory?.tradeVolumeUSD ?? 0,\n            twoDayHistory?.tradeVolumeUSD ?? 0\n          )\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\n            data.txCount,\n            oneDayHistory?.txCount ?? 0,\n            twoDayHistory?.txCount ?? 0\n          )\n\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\n\n          // percent changes\n          const priceChangeUSD = getPercentChange(\n            data?.derivedETH * ethPrice,\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\n          )\n\n          // set data\n          data.priceUSD = data?.derivedETH * ethPrice\n          data.totalLiquidityUSD = currentLiquidityUSD\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n          data.volumeChangeUSD = volumeChangeUSD\n          data.priceChangeUSD = priceChangeUSD\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n          data.oneDayTxns = oneDayTxns\n          data.txnChange = txnChange\n\n          // new tokens\n          if (!oneDayHistory && data) {\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n            data.oneDayTxns = data.txCount\n          }\n\n          // update name data for\n          updateNameData({\n            token0: data,\n          })\n\n          // HOTFIX for Aave\n          if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n            const aaveData = await client.query({\n              query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n              fetchPolicy: 'cache-first',\n            })\n            const result = aaveData.data.pairs[0]\n            data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n            data.liquidityChangeUSD = 0\n            data.priceChangeUSD = 0\n          }\n\n          // used for custom adjustments\n          data.oneDayData = oneDayHistory\n          data.twoDayData = twoDayHistory\n\n          return data\n        })\n    )\n\n    return bulkResults\n\n    // calculate percentage changes and daily changes\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  // initialize data arrays\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(address),\n      fetchPolicy: 'cache-first',\n    })\n    data = result?.data?.tokens?.[0]\n\n    // get results from 24 hours in past\n    let oneDayResult = await client.query({\n      query: TOKEN_DATA(address, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.tokens[0]\n\n    // get results from 48 hours in past\n    let twoDayResult = await client.query({\n      query: TOKEN_DATA(address, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.tokens[0]\n\n    // catch the case where token wasnt in top list in previous days\n    if (!oneDayData) {\n      let oneDayResult = await client.query({\n        query: TOKEN_DATA(address, oneDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      oneDayData = oneDayResult.data.tokens[0]\n    }\n    if (!twoDayData) {\n      let twoDayResult = await client.query({\n        query: TOKEN_DATA(address, twoDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      twoDayData = twoDayResult.data.tokens[0]\n    }\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n      data.tradeVolumeUSD,\n      oneDayData?.tradeVolumeUSD ?? 0,\n      twoDayData?.tradeVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\n      data.untrackedVolumeUSD,\n      oneDayData?.untrackedVolumeUSD ?? 0,\n      twoDayData?.untrackedVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\n      data.txCount,\n      oneDayData?.txCount ?? 0,\n      twoDayData?.txCount ?? 0\n    )\n\n    const priceChangeUSD = getPercentChange(\n      data?.derivedETH * ethPrice,\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\n    )\n\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\n\n    // set data\n    data.priceUSD = data?.derivedETH * ethPrice\n    data.totalLiquidityUSD = currentLiquidityUSD\n    data.oneDayVolumeUSD = oneDayVolumeUSD\n    data.volumeChangeUSD = volumeChangeUSD\n    data.priceChangeUSD = priceChangeUSD\n    data.oneDayVolumeUT = oneDayVolumeUT\n    data.volumeChangeUT = volumeChangeUT\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n    data.liquidityChangeUSD = liquidityChangeUSD\n    data.oneDayTxns = oneDayTxns\n    data.txnChange = txnChange\n\n    // used for custom adjustments\n    data.oneDayData = oneDayData?.[address]\n    data.twoDayData = twoDayData?.[address]\n\n    // new tokens\n    if (!oneDayData && data) {\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n      data.oneDayTxns = data.txCount\n    }\n\n    // update name data for\n    updateNameData({\n      token0: data,\n    })\n\n    // HOTFIX for Aave\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n      const aaveData = await client.query({\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n        fetchPolicy: 'cache-first',\n      })\n      const result = aaveData.data.pairs[0]\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n      data.liquidityChangeUSD = 0\n      data.priceChangeUSD = 0\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nconst getTokenTransactions = async (allPairsFormatted) => {\n  const transactions = {}\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: allPairsFormatted,\n      },\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n  return transactions\n}\n\nconst getTokenPairs = async (tokenAddress) => {\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(tokenAddress),\n      fetchPolicy: 'cache-first',\n    })\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\n  const utcEndTime = dayjs.utc()\n  let time = startTime\n\n  // create an array of hour start times until we reach current hour\n  // buffer by half hour to catch case where graph isnt synced to latest block\n  const timestamps = []\n  while (time < utcEndTime.unix()) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  // backout if invalid timestamp format\n  if (timestamps.length === 0) {\n    return []\n  }\n\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n  let blocks\n  try {\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      let derivedETH = parseFloat(result[row]?.derivedETH)\n      if (timestamp) {\n        values.push({\n          timestamp,\n          derivedETH,\n        })\n      }\n    }\n\n    // go through eth usd prices and assign to original values array\n    let index = 0\n    for (var brow in result) {\n      let timestamp = brow.split('b')[1]\n      if (timestamp) {\n        values[index].priceUSD = result[brow].ethPrice * values[index].derivedETH\n        index += 1\n      }\n    }\n\n    let formattedHistory = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistory.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].priceUSD),\n        close: parseFloat(values[i + 1].priceUSD),\n      })\n    }\n\n    return formattedHistory\n  } catch (e) {\n    console.log(e)\n    console.log('error fetching blocks')\n    return []\n  }\n}\n\nconst getTokenChartData = async (tokenAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year')\n  let startTime = utcStartTime.startOf('minute').unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: TOKEN_CHART,\n        variables: {\n          tokenAddr: tokenAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (result.data.tokenDayDatas.length < 1000) {\n        allFound = true\n      }\n      skip += 1000\n      data = data.concat(result.data.tokenDayDatas)\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n    })\n\n    // fill in empty days\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\n    let latestPriceUSD = data[0] && data[0].priceUSD\n    let latestPairDatas = data[0] && data[0].mostLiquidPairs\n    let index = 1\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\n      const nextDay = timestamp + oneDay\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\n      if (!dayIndexSet.has(currentDayIndex)) {\n        data.push({\n          date: nextDay,\n          dayString: nextDay,\n          dailyVolumeUSD: 0,\n          priceUSD: latestPriceUSD,\n          totalLiquidityUSD: latestLiquidityUSD,\n          mostLiquidPairs: latestPairDatas,\n        })\n      } else {\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n        latestPriceUSD = dayIndexArray[index].priceUSD\n        latestPairDatas = dayIndexArray[index].mostLiquidPairs\n        index = index + 1\n      }\n      timestamp = nextDay\n    }\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nexport function Updater() {\n  const [, { updateTopTokens }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs for overview list\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\n      topTokens && updateTopTokens(topTokens)\n    }\n    ethPrice && ethPriceOld && getData()\n  }, [ethPrice, ethPriceOld, updateTopTokens])\n  return null\n}\n\nexport function useTokenData(tokenAddress) {\n  const [state, { update }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  const tokenData = state?.[tokenAddress]\n\n  useEffect(() => {\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\n        update(tokenAddress, data)\n      })\n    }\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\n\n  return tokenData || {}\n}\n\nexport function useTokenTransactions(tokenAddress) {\n  const [state, { updateTokenTxns }] = useTokenDataContext()\n  const tokenTxns = state?.[tokenAddress]?.txns\n\n  const allPairsFormatted =\n    state[tokenAddress] &&\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\n      return pair.id\n    })\n\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!tokenTxns && allPairsFormatted) {\n        let transactions = await getTokenTransactions(allPairsFormatted)\n        updateTokenTxns(tokenAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\n\n  return tokenTxns || []\n}\n\nexport function useTokenPairs(tokenAddress) {\n  const [state, { updateAllPairs }] = useTokenDataContext()\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\n\n  useEffect(() => {\n    async function fetchData() {\n      let allPairs = await getTokenPairs(tokenAddress)\n      updateAllPairs(tokenAddress, allPairs)\n    }\n    if (!tokenPairs && isAddress(tokenAddress)) {\n      fetchData()\n    }\n  }, [tokenAddress, tokenPairs, updateAllPairs])\n\n  return tokenPairs || []\n}\n\nexport function useTokenDataCombined(tokenAddresses) {\n  const [state, { updateCombinedVolume }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n\n  const volume = state?.combinedVol\n\n  useEffect(() => {\n    async function fetchDatas() {\n      Promise.all(\n        tokenAddresses.map(async (address) => {\n          return await getTokenData(address, ethPrice, ethPriceOld)\n        })\n      )\n        .then((res) => {\n          if (res) {\n            const newVolume = res\n              ? res?.reduce(function (acc, entry) {\n                  acc = acc + parseFloat(entry.oneDayVolumeUSD)\n                  return acc\n                }, 0)\n              : 0\n            updateCombinedVolume(newVolume)\n          }\n        })\n        .catch(() => {\n          console.log('error fetching combined data')\n        })\n    }\n    if (!volume && ethPrice && ethPriceOld) {\n      fetchDatas()\n    }\n  }, [tokenAddresses, ethPrice, ethPriceOld, volume, updateCombinedVolume])\n\n  return volume\n}\n\nexport function useTokenChartDataCombined(tokenAddresses) {\n  const [state, { updateChartData }] = useTokenDataContext()\n\n  const datas = useMemo(() => {\n    return (\n      tokenAddresses &&\n      tokenAddresses.reduce(function (acc, address) {\n        acc[address] = state?.[address]?.chartData\n        return acc\n      }, {})\n    )\n  }, [state, tokenAddresses])\n\n  const isMissingData = useMemo(() => Object.values(datas).filter((val) => !val).length > 0, [datas])\n\n  const formattedByDate = useMemo(() => {\n    return (\n      datas &&\n      !isMissingData &&\n      Object.keys(datas).map(function (address) {\n        const dayDatas = datas[address]\n        return dayDatas?.reduce(function (acc, dayData) {\n          acc[dayData.date] = dayData\n          return acc\n        }, {})\n      }, {})\n    )\n  }, [datas, isMissingData])\n\n  useEffect(() => {\n    async function fetchDatas() {\n      Promise.all(\n        tokenAddresses.map(async (address) => {\n          return await getTokenChartData(address)\n        })\n      )\n        .then((res) => {\n          res &&\n            res.map((result, i) => {\n              const tokenAddress = tokenAddresses[i]\n              updateChartData(tokenAddress, result)\n              return true\n            })\n        })\n        .catch(() => {\n          console.log('error fetching combined data')\n        })\n    }\n    if (isMissingData) {\n      fetchDatas()\n    }\n  }, [isMissingData, tokenAddresses, updateChartData])\n\n  return formattedByDate\n}\n\nexport function useTokenChartData(tokenAddress) {\n  const [state, { updateChartData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.chartData\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getTokenChartData(tokenAddress)\n        updateChartData(tokenAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, tokenAddress, updateChartData])\n  return chartData\n}\n\n/**\n * get candlestick data for a token - saves in context based on the window and the\n * interval size\n * @param {*} tokenAddress\n * @param {*} timeWindow // a preset time window from constant - how far back to look\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\n */\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\n  const [state, { updatePriceData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\n      updatePriceData(tokenAddress, data, timeWindow, interval)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\n\n  return chartData\n}\n\nexport function useAllTokenData() {\n  const [state] = useTokenDataContext()\n\n  // filter out for only addresses\n  return Object.keys(state)\n    .filter((key) => key !== 'combinedVol')\n    .reduce((res, key) => {\n      res[key] = state[key]\n      return res\n    }, {})\n}\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport { getShareValueOverTime } from '.'\n\nexport const priceOverrides = [\n  '0xf5b24c0093b65408ace53df7ce86a02448d53b25', // USDC on FXEVM - added by - Issei\n  //'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC - removed by Issei\n  '0x50de24b3f0b3136c50fa8a3b8ebc8bd80a269ce5', // DAI on FXEVM - added by - Issei\n  //'0x6b175474e89094c44da98b954eedeac495271d0f', // DAI - removed by Issei\n]\n\ninterface ReturnMetrics {\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\n  netReturn: number // net return from t0 -> t1\n  uniswapReturn: number // netReturn - hodlReturn\n  impLoss: number\n  fees: number\n}\n\n// used to calculate returns within a given window bounded by two positions\ninterface Position {\n  pair: any\n  liquidityTokenBalance: number\n  liquidityTokenTotalSupply: number\n  reserve0: number\n  reserve1: number\n  reserveUSD: number\n  token0PriceUSD: number\n  token1PriceUSD: number\n}\n\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1589747086\n\nfunction formatPricesForEarlyTimestamps(position): Position {\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\n      position.token0PriceUSD = 1\n    }\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\n      position.token1PriceUSD = 1\n    }\n    // WETH price - removed by - Issei\n    // if (position.pair?.token0.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n    //   position.token0PriceUSD = 203\n    // }\n    // if (position.pair?.token1.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n    //   position.token1PriceUSD = 203\n    // }\n\n    // WFX Price - added by Issei\n    if (position.pair?.token0.id === '0x3452e23f9c4cc62c70b7adad699b264af3549c19') {\n      position.token0PriceUSD = 203\n    }\n    if (position.pair?.token1.id === '0x3452e23f9c4cc62c70b7adad699b264af3549c19') {\n      position.token1PriceUSD = 203\n    }\n  }\n  return position\n}\n\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\n  let usd = 0\n  let amount0 = 0\n  let amount1 = 0\n  // get all minst and burns to get principal amounts\n  const results = await client.query({\n    query: USER_MINTS_BUNRS_PER_PAIR,\n    variables: {\n      user,\n      pair: pairAddress,\n    },\n  })\n  for (const index in results.data.mints) {\n    const mint = results.data.mints[index]\n    const mintToken0 = mint.pair.token0.id\n    const mintToken1 = mint.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount0) * 2\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount1) * 2\n    } else {\n      usd += parseFloat(mint.amountUSD)\n    }\n    amount0 += parseFloat(mint.amount0)\n    amount1 += parseFloat(mint.amount1)\n  }\n\n  for (const index in results.data.burns) {\n    const burn = results.data.burns[index]\n    const burnToken0 = burn.pair.token0.id\n    const burnToken1 = burn.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount0) * 2\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount1) * 2\n    } else {\n      usd -= parseFloat(burn.amountUSD)\n    }\n\n    amount0 -= parseFloat(burn.amount0)\n    amount1 -= parseFloat(burn.amount1)\n  }\n\n  return { usd, amount0, amount1 }\n}\n\n/**\n * Core algorithm for calculating retursn within one time window.\n * @param positionT0 // users liquidity info and token rates at beginning of window\n * @param positionT1 // '' at the end of the window\n */\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\n\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\n\n  // get starting amounts of token0 and token1 deposited by LP\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\n\n  // get current token values\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\n\n  // calculate squares to find imp loss and fee differences\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\n  // eslint-disable-next-line eqeqeq\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\n\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\n  const token1_amount_no_fees =\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\n  const no_fees_usd =\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\n\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\n  const difference_fees_usd =\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\n\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\n\n  const imp_loss_usd = no_fees_usd - assetValueT1\n  const uniswap_return = difference_fees_usd + imp_loss_usd\n\n  // get net value change for combined data\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\n\n  return {\n    hodleReturn: assetValueT1 - assetValueT0,\n    netReturn: netValueT1 - netValueT0,\n    uniswapReturn: uniswap_return,\n    impLoss: imp_loss_usd,\n    fees: difference_fees_usd,\n  }\n}\n\n/**\n * formats data for historical chart for an LPs position in 1 pair over time\n * @param startDateTimestamp // day to start tracking at\n * @param currentPairData // current stat of the pair\n * @param pairSnapshots // history of entries and exits for lp on this pair\n * @param currentETHPrice // current price of eth used for usd conversions\n */\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentETHPrice) {\n  // catch case where data not puplated yet\n  if (!currentPairData.createdAtTimestamp) {\n    return []\n  }\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\n  const sortedPositions = pairSnapshots.sort((a, b) => {\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n  })\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\n  }\n\n  const dayTimestamps = []\n  while (dayIndex < currentDayIndex) {\n    // only account for days where this pair existed\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\n      dayTimestamps.push(dayIndex * 86400)\n    }\n    dayIndex = dayIndex + 1\n  }\n\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\n  const shareValuesFormatted = {}\n  shareValues.map((share) => {\n    return (shareValuesFormatted[share.timestamp] = share)\n  })\n\n  // set the default position and data\n  let positionT0 = pairSnapshots[0]\n  const formattedHistory = []\n  let netFees = 0\n\n  // keep track of up to date metrics as we parse each day\n  for (const index in dayTimestamps) {\n    // get the bounds on the day\n    const dayTimestamp = dayTimestamps[index]\n    const timestampCeiling = dayTimestamp + 86400\n\n    // for each change in position value that day, create a window and update\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n    })\n    for (let i = 0; i < dailyChanges.length; i++) {\n      const positionT1 = dailyChanges[i]\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      netFees = netFees + localReturns.fees\n      positionT0 = positionT1\n    }\n\n    // now treat the end of the day as a hypothetical position\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\n    if (!positionT1) {\n      positionT1 = {\n        pair: currentPairData.id,\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\n        totalSupply: currentPairData.totalSupply,\n        reserve0: currentPairData.reserve0,\n        reserve1: currentPairData.reserve1,\n        reserveUSD: currentPairData.reserveUSD,\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\n      }\n    }\n\n    if (positionT1) {\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\n      const currentLiquidityValue =\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\n        parseFloat(positionT1.reserveUSD)\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      const localFees = netFees + localReturns.fees\n\n      formattedHistory.push({\n        date: dayTimestamp,\n        usdValue: currentLiquidityValue,\n        fees: localFees,\n      })\n    }\n  }\n\n  return formattedHistory\n}\n\n/**\n * For a given pair and user, get the return metrics\n * @param user\n * @param pair\n * @param ethPrice\n */\nexport async function getLPReturnsOnPair(user: string, pair, ethPrice: number, snapshots) {\n  // initialize values\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\n  let hodlReturn = 0\n  let netReturn = 0\n  let uniswapReturn = 0\n  let fees = 0\n\n  snapshots = snapshots.filter((entry) => {\n    return entry.pair.id === pair.id\n  })\n\n  // get data about the current position\n  const currentPosition: Position = {\n    pair,\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\n    liquidityTokenTotalSupply: pair.totalSupply,\n    reserve0: pair.reserve0,\n    reserve1: pair.reserve1,\n    reserveUSD: pair.reserveUSD,\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\n  }\n\n  for (const index in snapshots) {\n    // get positions at both bounds of the window\n    const positionT0 = snapshots[index]\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\n\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\n    hodlReturn = hodlReturn + results.hodleReturn\n    netReturn = netReturn + results.netReturn\n    uniswapReturn = uniswapReturn + results.uniswapReturn\n    fees = fees + results.fees\n  }\n\n  return {\n    principal,\n    net: {\n      return: netReturn,\n    },\n    uniswap: {\n      return: uniswapReturn,\n    },\n    fees: {\n      sum: fees,\n    },\n  }\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { useAllPairData, usePairData } from './PairData'\nimport { client, stakingClient } from '../apollo/client'\nimport {\n  USER_TRANSACTIONS,\n  USER_POSITIONS,\n  USER_HISTORY,\n  PAIR_DAY_DATA_BULK,\n  MINING_POSITIONS,\n} from '../apollo/queries'\nimport { useTimeframe, useStartTimestamp } from './Application'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useEthPrice } from './GlobalData'\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\nimport { timeframeOptions } from '../constants'\n\ndayjs.extend(utc)\n\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\n\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\nconst POSITIONS_KEY = 'POSITIONS_KEY'\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\n\nconst UserContext = createContext()\n\nfunction useUserContext() {\n  return useContext(UserContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_TRANSACTIONS: {\n      const { account, transactions } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [TRANSACTIONS_KEY]: transactions,\n        },\n      }\n    }\n    case UPDATE_POSITIONS: {\n      const { account, positions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\n      }\n    }\n    case UPDATE_MINING_POSITIONS: {\n      const { account, miningPositions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\n      }\n    }\n    case UPDATE_USER_POSITION_HISTORY: {\n      const { account, historyData } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\n      }\n    }\n\n    case UPDATE_USER_PAIR_RETURNS: {\n      const { account, pairAddress, data } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [USER_PAIR_RETURNS_KEY]: {\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\n            [pairAddress]: data,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n  const updateTransactions = useCallback((account, transactions) => {\n    dispatch({\n      type: UPDATE_TRANSACTIONS,\n      payload: {\n        account,\n        transactions,\n      },\n    })\n  }, [])\n\n  const updatePositions = useCallback((account, positions) => {\n    dispatch({\n      type: UPDATE_POSITIONS,\n      payload: {\n        account,\n        positions,\n      },\n    })\n  }, [])\n\n  const updateMiningPositions = useCallback((account, miningPositions) => {\n    dispatch({\n      type: UPDATE_MINING_POSITIONS,\n      payload: {\n        account,\n        miningPositions,\n      },\n    })\n  }, [])\n\n  const updateUserSnapshots = useCallback((account, historyData) => {\n    dispatch({\n      type: UPDATE_USER_POSITION_HISTORY,\n      payload: {\n        account,\n        historyData,\n      },\n    })\n  }, [])\n\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\n    dispatch({\n      type: UPDATE_USER_PAIR_RETURNS,\n      payload: {\n        account,\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\n        ],\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\n      )}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUserTransactions(account) {\n  const [state, { updateTransactions }] = useUserContext()\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_TRANSACTIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data) {\n          updateTransactions(account, result?.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!transactions && account) {\n      fetchData(account)\n    }\n  }, [account, transactions, updateTransactions])\n\n  return transactions || {}\n}\n\n/**\n * Store all the snapshots of liquidity activity for this account.\n * Each snapshot is a moment when an LP position was created or updated.\n * @param {*} account\n */\nexport function useUserSnapshots(account) {\n  const [state, { updateUserSnapshots }] = useUserContext()\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let skip = 0\n        let allResults = []\n        let found = false\n        while (!found) {\n          let result = await client.query({\n            query: USER_HISTORY,\n            variables: {\n              skip: skip,\n              user: account,\n            },\n            fetchPolicy: 'cache-first',\n          })\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\n            found = true\n          } else {\n            skip += 1000\n          }\n        }\n        if (allResults) {\n          updateUserSnapshots(account, allResults)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!snapshots && account) {\n      fetchData()\n    }\n  }, [account, snapshots, updateUserSnapshots])\n\n  return snapshots\n}\n\n/**\n * For a given position (data about holding) and user, get the chart\n * data for the fees and liquidity over time\n * @param {*} position\n * @param {*} account\n */\nexport function useUserPositionChart(position, account) {\n  const pairAddress = position?.pair?.id\n  const [state, { updateUserPairReturns }] = useUserContext()\n\n  // get oldest date of data to fetch\n  const startDateTimestamp = useStartTimestamp()\n\n  // get users adds and removes on this pair\n  const snapshots = useUserSnapshots(account)\n  const pairSnapshots =\n    snapshots &&\n    position &&\n    snapshots.filter((currentSnapshot) => {\n      return currentSnapshot.pair.id === position.pair.id\n    })\n\n  // get data needed for calculations\n  const currentPairData = usePairData(pairAddress)\n  const [currentETHPrice] = useEthPrice()\n\n  // formatetd array to return for chart data\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchedData = await getHistoricalPairReturns(\n        startDateTimestamp,\n        currentPairData,\n        pairSnapshots,\n        currentETHPrice\n      )\n      updateUserPairReturns(account, pairAddress, fetchedData)\n    }\n    if (\n      account &&\n      startDateTimestamp &&\n      pairSnapshots &&\n      !formattedHistory &&\n      currentPairData &&\n      Object.keys(currentPairData).length > 0 &&\n      pairAddress &&\n      currentETHPrice\n    ) {\n      fetchData()\n    }\n  }, [\n    account,\n    startDateTimestamp,\n    pairSnapshots,\n    formattedHistory,\n    pairAddress,\n    currentPairData,\n    currentETHPrice,\n    updateUserPairReturns,\n    position.pair.id,\n  ])\n\n  return formattedHistory\n}\n\n/**\n * For each day starting with min(first position timestamp, beginning of time window),\n * get total liquidity supplied by user in USD. Format in array with date timestamps\n * and usd liquidity value.\n */\nexport function useUserLiquidityChart(account) {\n  const history = useUserSnapshots(account)\n  // formatetd array to return for chart data\n  const [formattedHistory, setFormattedHistory] = useState()\n\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n  const [activeWindow] = useTimeframe()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    const utcEndTime = dayjs.utc()\n    // based on window, get starttime\n    let utcStartTime\n    switch (activeWindow) {\n      case timeframeOptions.WEEK:\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\n        break\n      case timeframeOptions.ALL_TIME:\n        utcStartTime = utcEndTime.subtract(1, 'year')\n        break\n      default:\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\n        break\n    }\n    let startTime = utcStartTime.unix() - 1\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\n      setStartDateTimestamp(startTime)\n    }\n  }, [activeWindow, startDateTimestamp])\n\n  useEffect(() => {\n    async function fetchData() {\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\n\n      // sort snapshots in order\n      let sortedPositions = history.sort((a, b) => {\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n      })\n      // if UI start time is > first position time - bump start index to this time\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\n      }\n\n      const dayTimestamps = []\n      // get date timestamps for all days in view\n      while (dayIndex < currentDayIndex) {\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\n        dayIndex = dayIndex + 1\n      }\n\n      const pairs = history.reduce((pairList, position) => {\n        return [...pairList, position.pair.id]\n      }, [])\n\n      // get all day datas where date is in this list, and pair is in pair list\n      let {\n        data: { pairDayDatas },\n      } = await client.query({\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\n      })\n\n      const formattedHistory = []\n\n      // map of current pair => ownership %\n      const ownershipPerPair = {}\n      for (const index in dayTimestamps) {\n        const dayTimestamp = dayTimestamps[index]\n        const timestampCeiling = dayTimestamp + 86400\n\n        // cycle through relevant positions and update ownership for any that we need to\n        const relevantPositions = history.filter((snapshot) => {\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n        })\n        for (const index in relevantPositions) {\n          const position = relevantPositions[index]\n          // case where pair not added yet\n          if (!ownershipPerPair[position.pair.id]) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n          // case where more recent timestamp is found for pair\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n        }\n\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\n          // find last day data after timestamp update\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\n            return dayData.pairAddress === pairAddress\n          })\n          // find the most recent reference to pair liquidity data\n          let mostRecent = dayDatasForThisPair[0]\n          for (const index in dayDatasForThisPair) {\n            const dayData = dayDatasForThisPair[index]\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\n              mostRecent = dayData\n            }\n          }\n          return mostRecent\n        })\n\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\n          if (dayData) {\n            return (totalUSD =\n              totalUSD +\n              (ownershipPerPair[dayData.pairAddress]\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\n                  parseFloat(dayData.reserveUSD)\n                : 0))\n          } else {\n            return totalUSD\n          }\n        }, 0)\n\n        formattedHistory.push({\n          date: dayTimestamp,\n          valueUSD: dailyUSD,\n        })\n      }\n\n      setFormattedHistory(formattedHistory)\n    }\n    if (history && startDateTimestamp && history.length > 0) {\n      fetchData()\n    }\n  }, [history, startDateTimestamp])\n\n  return formattedHistory\n}\n\nexport function useUserPositions(account) {\n  const [state, { updatePositions }] = useUserContext()\n  const positions = state?.[account]?.[POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n  const [ethPrice] = useEthPrice()\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_POSITIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data?.liquidityPositions) {\n          let formattedPositions = await Promise.all(\n            result?.data?.liquidityPositions.map(async (positionData) => {\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\n              return {\n                ...positionData,\n                ...returnData,\n              }\n            })\n          )\n          updatePositions(account, formattedPositions)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!positions && account && ethPrice && snapshots) {\n      fetchData(account)\n    }\n  }, [account, positions, updatePositions, ethPrice, snapshots])\n\n  return positions\n}\n\nexport function useMiningPositions(account) {\n  const [state, { updateMiningPositions }] = useUserContext()\n  const allPairData = useAllPairData()\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let miningPositionData = []\n        let result = await stakingClient.query({\n          query: MINING_POSITIONS(account),\n          fetchPolicy: 'no-cache',\n        })\n        if (!result?.data?.user?.miningPosition) {\n          return\n        }\n        miningPositionData = result.data.user.miningPosition\n        for (const miningPosition of miningPositionData) {\n          const pairAddress = miningPosition.miningPool.pair.id\n          miningPosition.pairData = allPairData[pairAddress]\n        }\n        updateMiningPositions(account, miningPositionData)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    if (!miningPositions && account && snapshots) {\n      fetchData(account)\n    }\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\n  return miningPositions\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: center;\n  align-items: ${({ align }) => align && align};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  justify-content: ${({ justify }) => justify};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\n  margin: -${({ gap }) => gap};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`\n\nconst Wrapper = styled.div`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${pulse} 800ms linear infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nconst LocalLoader = ({ fill }) => {\n  const [darkMode] = useDarkModeManager()\n\n  return (\n    <Wrapper fill={fill}>\n      <AnimatedImg>\n        <img src={require(darkMode ? '../../assets/logo_white.svg' : '../../assets/logo.svg')} alt=\"loading-icon\" />\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nexport default LocalLoader\n","import React from 'react'\nimport { Link as RebassLink } from 'rebass'\nimport { Link as RouterLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { lighten, darken } from 'polished'\n\nconst WrappedLink = ({ external, children, ...rest }) => (\n  <RebassLink\n    target={external ? '_blank' : null}\n    rel={external ? 'noopener noreferrer' : null}\n    color=\"#2f80ed\"\n    {...rest}\n  >\n    {children}\n  </RebassLink>\n)\n\nWrappedLink.propTypes = {\n  external: PropTypes.bool,\n}\n\nconst Link = styled(WrappedLink)`\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n`\n\nexport default Link\n\nexport const CustomLink = styled(RouterLink)`\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n\n  &:visited {\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\n  }\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\n  }\n`\n\nexport const BasicLink = styled(RouterLink)`\n  text-decoration: none;\n  color: inherit;\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box } from 'rebass'\n\nimport Link from './Link'\n\nimport { urls } from '../utils'\n\nconst Divider = styled(Box)`\n  height: 1px;\n  background-color: ${({ theme }) => theme.divider};\n`\n\nexport const BlockedWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const BlockedMessageWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.text3};\n  border-radius: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  max-width: 80%;\n`\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  right: 0;\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst Hint = ({ children, ...rest }) => (\n  <Text fontSize={16} weight={500} {...rest}>\n    {children}\n  </Text>\n)\n\nconst Address = ({ address, token, ...rest }) => (\n  <Link\n    color=\"button\"\n    href={token ? urls.showToken(address) : urls.showAddress(address)}\n    external\n    style={{ wordBreak: 'break-all' }}\n    {...rest}\n  >\n    {address}\n  </Link>\n)\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: ${({ fade }) => fade && '0.7'};\n  }\n`\n\nexport const StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text1};\n`\n\nconst EmptyCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.text1};\n  height: ${({ height }) => height && height};\n`\n\nexport const SideBar = styled.span`\n  display: grid;\n  grid-gap: 24px;\n  position: sticky;\n  top: 4rem;\n`\n\nexport const SubNav = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin-bottom: 2rem;\n`\nexport const SubNavEl = styled.li`\n  list-style: none;\n  display: flex;\n  padding-bottom: 0.5rem;\n  margin-right: 1rem;\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\n\n  :hover {\n    cursor: pointer;\n    border-bottom: 1px solid ${({ theme }) => theme.bg3};\n  }\n`\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 36px;\n  padding-bottom: 80px;\n\n  @media screen and (max-width: 600px) {\n    & > * {\n      padding: 0 12px;\n    }\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const ContentWrapperLarge = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  padding: 0 2rem;\n  margin: 0 auto;\n  box-sizing: border-box;\n  max-width: 1440px;\n  width: 100%;\n\n  @media screen and (max-width: 1282px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FullWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FixedMenu = styled.div`\n  z-index: 99;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 1rem;\n  box-sizing: border-box;\n  margin-bottom: 2rem;\n  max-width: 100vw;\n\n  @media screen and (max-width: 800px) {\n    margin-bottom: 0;\n  }\n`\n\nexport { Hint, Divider, Address, EmptyCard }\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils/index.js'\nimport EthereumLogo from '../../assets/eth.png'\n\nconst BAD_IMAGES = {}\n\nconst Inline = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n`\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 50%;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nconst StyledEthereumLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > img {\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n  }\n`\n\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    setError(false)\n  }, [address])\n\n  if (error || BAD_IMAGES[address]) {\n    return (\n      <Inline>\n        <span {...rest} alt={''} style={{ fontSize: size }} role=\"img\" aria-label=\"face\">\n          🤔\n        </span>\n      </Inline>\n    )\n  }\n\n  // hard coded fixes for trust wallet api issues\n  if (address?.toLowerCase() === '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb') {\n    address = '0x42456d7084eacf4083f1140d3229471bba2949a8'\n  }\n\n  if (address?.toLowerCase() === '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f') {\n    address = '0xc011a72400e58ecd99ee497cf89e3775d4bd732f'\n  }\n\n  if (address?.toLowerCase() === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n    return (\n      <StyledEthereumLogo size={size} {...rest}>\n        <img\n          src={EthereumLogo}\n          style={{\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\n            borderRadius: '24px',\n          }}\n          alt=\"\"\n        />\n      </StyledEthereumLogo>\n    )\n  }\n\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n    address\n  )}/logo.png`\n\n  return (\n    <Inline>\n      <Image\n        {...rest}\n        alt={''}\n        src={path}\n        size={size}\n        onError={(event) => {\n          BAD_IMAGES[address] = true\n          setError(true)\n          event.preventDefault()\n        }}\n      />\n    </Inline>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TokenLogo from '../TokenLogo'\n\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\n  const TokenWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n  `\n\n  const HigherLogo = styled(TokenLogo)`\n    z-index: 2;\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  const CoveredLogo = styled(TokenLogo)`\n    position: absolute;\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  return (\n    <TokenWrapper sizeraw={size} margin={margin}>\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\n    </TokenWrapper>\n  )\n}\n","import { useState, useCallback, useEffect, useRef } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { isAddress } from '../utils'\nimport copy from 'copy-to-clipboard'\n\nexport function useColor(tokenAddress, token) {\n  const [color, setColor] = useState('#2172E5')\n  if (tokenAddress) {\n    const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n      tokenAddress\n    )}/logo.png`\n    if (path) {\n      Vibrant.from(path).getPalette((err, palette) => {\n        if (palette && palette.Vibrant) {\n          let detectedHex = palette.Vibrant.hex\n          let AAscore = hex(detectedHex, '#FFF')\n          while (AAscore < 3) {\n            detectedHex = shade(0.005, detectedHex)\n            AAscore = hex(detectedHex, '#FFF')\n          }\n          if (token === 'DAI') {\n            setColor('#FAAB14')\n          } else {\n            setColor(detectedHex)\n          }\n        }\n      })\n    }\n  }\n  return color\n}\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n\nexport const useOutsideClick = (ref, ref2, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && ref.current && !ref2.current) {\n      callback(true)\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\n      callback(true)\n    } else {\n      callback(false)\n    }\n  }\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n}\n\nexport default function useInterval(callback: () => void, delay: null | number) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return\n  }, [delay])\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\n  const [arrowElement] = useState<HTMLDivElement>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n\n  useInterval(update, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          {/* <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          /> */}\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show && !disabled}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <Question size={16} />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Tooltip } from '../QuestionHelper'\n\nconst TextWrapper = styled.div`\n  position: relative;\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link }) => (link ? theme.blue : theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return ''\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default FormattedName\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\nimport { PAIR_BLACKLIST } from '../../constants'\nimport { AutoColumn } from '../Column'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  opacity: ${({ fade }) => (fade ? '0.6' : '1')};\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5,\n}\n\nconst FIELD_TO_VALUE = (field, useTracked) => {\n  switch (field) {\n    case SORT_FIELD.LIQ:\n      return useTracked ? 'trackedReserveUSD' : 'reserveUSD'\n    case SORT_FIELD.VOL:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    case SORT_FIELD.VOL_7DAYS:\n      return useTracked ? 'oneWeekVolumeUSD' : 'oneWeekVolumeUntracked'\n    case SORT_FIELD.FEES:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    default:\n      return 'trackedReserveUSD'\n  }\n}\n\nconst formatDataText = (value, trackedValue, supressWarning = false) => {\n  const showUntracked = value !== '$0' && !trackedValue & !supressWarning\n  return (\n    <AutoColumn gap=\"2px\" style={{ opacity: showUntracked ? '0.7' : '1' }}>\n      <div style={{ textAlign: 'right' }}>{value}</div>\n      <TYPE.light fontSize={'9px'} style={{ textAlign: 'right' }}>\n        {showUntracked ? 'untracked' : '  '}\n      </TYPE.light>\n    </AutoColumn>\n  )\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10, useTracked = false }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(\n        !!pairData.trackedReserveUSD ? pairData.trackedReserveUSD : pairData.reserveUSD,\n        true\n      )\n\n      const volume = formattedNum(\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked,\n        true\n      )\n\n      const apy = formattedPercent(\n        ((pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked) * 0.003 * 365 * 100) /\n          (pairData.oneDayVolumeUSD ? pairData.trackedReserveUSD : pairData.reserveUSD)\n      )\n\n      const weekVolume = formattedNum(\n        pairData.oneWeekVolumeUSD ? pairData.oneWeekVolumeUSD : pairData.oneWeekVolumeUntracked,\n        true\n      )\n\n      const fees = formattedNum(\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD * 0.003 : pairData.oneDayVolumeUntracked * 0.003,\n        true\n      )\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo\n              size={below600 ? 16 : 20}\n              a0={pairData.token0.id}\n              a1={pairData.token1.id}\n              margin={!below740}\n            />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={pairData.token0.symbol + '-' + pairData.token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{formatDataText(liquidity, pairData.trackedReserveUSD)}</DataText>\n          <DataText area=\"vol\">{formatDataText(volume, pairData.oneDayVolumeUSD)}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{formatDataText(weekVolume, pairData.oneWeekVolumeUSD)}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{formatDataText(fees, pairData.oneDayVolumeUSD)}</DataText>}\n          {!below1080 && (\n            <DataText area=\"apy\">\n              {formatDataText(apy, pairData.oneDayVolumeUSD, pairData.oneDayVolumeUSD === 0)}\n            </DataText>\n          )}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .filter(\n        (address) => !PAIR_BLACKLIST.includes(address) && (useTracked ? !!pairs[address].trackedReserveUSD : true)\n      )\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE(sortedColumn, useTracked)]) >\n          parseFloat(pairB[FIELD_TO_VALUE(sortedColumn, useTracked)])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { Box, Flex, Text } from 'rebass'\nimport TokenLogo from '../TokenLogo'\nimport { CustomLink } from '../Link'\nimport Row from '../Row'\nimport { Divider } from '..'\n\nimport { formattedNum, formattedPercent } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { withRouter } from 'react-router-dom'\nimport { TOKEN_BLACKLIST } from '../../constants'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 680px) {\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol ';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    display: grid;\n    grid-gap: 0.5em;\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol price change';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  color: ${({ theme }) => theme.text1} !important;\n  @media screen and (max-width: 640px) {\n    font-size: 0.85rem;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1} !important;\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 'totalLiquidityUSD',\n  VOL: 'oneDayVolumeUSD',\n  VOL_UT: 'oneDayVolumeUT',\n  SYMBOL: 'symbol',\n  NAME: 'name',\n  PRICE: 'priceUSD',\n  CHANGE: 'priceChangeUSD',\n}\n\n// @TODO rework into virtualized list\nfunction TopTokenList({ tokens, itemMax = 10, useTracked = false }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VOL)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below680 = useMedia('(max-width: 680px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [tokens])\n\n  const formattedTokens = useMemo(() => {\n    return (\n      tokens &&\n      Object.keys(tokens)\n        .filter((key) => {\n          return !TOKEN_BLACKLIST.includes(key)\n        })\n        .map((key) => tokens[key])\n    )\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens && formattedTokens) {\n      let extraPages = 1\n      if (formattedTokens.length % itemMax === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\n    }\n  }, [tokens, formattedTokens, itemMax])\n\n  const filteredList = useMemo(() => {\n    return (\n      formattedTokens &&\n      formattedTokens\n        .sort((a, b) => {\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n          }\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n            ? (sortDirection ? -1 : 1) * 1\n            : (sortDirection ? -1 : 1) * -1\n        })\n        .slice(itemMax * (page - 1), page * itemMax)\n    )\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\n\n  const ListItem = ({ item, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} focus={true}>\n        <DataText area=\"name\" fontWeight=\"500\">\n          <Row>\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\n            <TokenLogo address={item.id} />\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\n              <FormattedName\n                text={below680 ? item.symbol : item.name}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </Row>\n        </DataText>\n        {!below680 && (\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\n            <FormattedName text={item.symbol} maxCharacters={5} />\n          </DataText>\n        )}\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\n        {!below1080 && (\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\n            {formattedNum(item.priceUSD, true)}\n          </DataText>\n        )}\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\n      </DashGrid>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"text\"\n            area=\"name\"\n            fontWeight=\"500\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.NAME)\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\n            }}\n          >\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below680 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"symbol\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.SYMBOL)\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\n              }}\n            >\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={() => {\n              setSortedColumn(useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL)\n              setSortDirection(\n                sortedColumn !== (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? true : !sortDirection\n              )\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"price\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.PRICE)\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\n              }}\n            >\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"change\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.CHANGE)\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\n              }}\n            >\n              Price Change (24hrs)\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {filteredList &&\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })}\n      </List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(TopTokenList)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { ChevronDown as Arrow } from 'react-feather'\nimport { TYPE } from '../../Theme'\nimport { StyledIcon } from '..'\n\nconst Wrapper = styled.div`\n  z-index: 20;\n  position: relative;\n  background-color: ${({ theme }) => theme.panelColor};\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \n  width: 100px;\n  padding: 4px 10px;\n  padding-right: 6px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 34px;\n  padding-top: 40px;\n  width: calc(100% - 40px);\n  background-color: ${({ theme }) => theme.bg1};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 10px 10px;\n  border-radius: 8px;\n  width: calc(100% - 20px);\n  font-weight: 500;\n  font-size: 1rem;\n  color: black;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ArrowStyled = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-left: 6px;\n`\n\nconst DropdownSelect = ({ options, active, setActive, color }) => {\n  const [showDropdown, toggleDropdown] = useState(false)\n\n  return (\n    <Wrapper open={showDropdown} color={color}>\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\n        <TYPE.main>{active}</TYPE.main>\n        <StyledIcon>\n          <ArrowStyled />\n        </StyledIcon>\n      </RowBetween>\n      {showDropdown && (\n        <Dropdown>\n          <AutoColumn gap=\"20px\">\n            {Object.keys(options).map((key, index) => {\n              let option = options[key]\n              return (\n                option !== active && (\n                  <Row\n                    onClick={() => {\n                      toggleDropdown(!showDropdown)\n                      setActive(option)\n                    }}\n                    key={index}\n                  >\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\n                  </Row>\n                )\n              )\n            })}\n          </AutoColumn>\n        </Dropdown>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default DropdownSelect\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { formatTime, formattedNum, urls } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { useCurrentCurrency } from '../../contexts/Application'\nimport { RowFixed, RowBetween } from '../Row'\n\nimport LocalLoader from '../LocalLoader'\nimport { Box, Flex, Text } from 'rebass'\nimport Link from '../Link'\nimport { Divider, EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'txn value time';\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 500px) {\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 780px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther time';\n\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther account time';\n  }\n`\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  user-select: none;\n  text-align: end;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: right;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 40em) {\n    font-size: 0.85rem;\n  }\n`\n\nconst SortText = styled.button`\n  cursor: pointer;\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'amountUSD',\n  AMOUNT0: 'token0Amount',\n  AMOUNT1: 'token1Amount',\n  TIMESTAMP: 'timestamp',\n}\n\nconst TXN_TYPE = {\n  ALL: 'All',\n  SWAP: 'Swaps',\n  ADD: 'Adds',\n  REMOVE: 'Removes',\n}\n\nconst ITEMS_PER_PAGE = 10\n\nfunction getTransactionType(event, symbol0, symbol1) {\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\n  switch (event) {\n    case TXN_TYPE.ADD:\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.REMOVE:\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.SWAP:\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\n    default:\n      return ''\n  }\n}\n\n// @TODO rework into virtualized list\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\n  const [filteredItems, setFilteredItems] = useState()\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\n\n  const [currency] = useCurrentCurrency()\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [transactions])\n\n  // parse the txns and format for UI\n  useEffect(() => {\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\n      let newTxns = []\n      if (transactions.mints.length > 0) {\n        transactions.mints.map((mint) => {\n          let newTxn = {}\n          newTxn.hash = mint.transaction.id\n          newTxn.timestamp = mint.transaction.timestamp\n          newTxn.type = TXN_TYPE.ADD\n          newTxn.token0Amount = mint.amount0\n          newTxn.token1Amount = mint.amount1\n          newTxn.account = mint.to\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\n          newTxn.amountUSD = mint.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.burns.length > 0) {\n        transactions.burns.map((burn) => {\n          let newTxn = {}\n          newTxn.hash = burn.transaction.id\n          newTxn.timestamp = burn.transaction.timestamp\n          newTxn.type = TXN_TYPE.REMOVE\n          newTxn.token0Amount = burn.amount0\n          newTxn.token1Amount = burn.amount1\n          newTxn.account = burn.sender\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\n          newTxn.amountUSD = burn.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.swaps.length > 0) {\n        transactions.swaps.map((swap) => {\n          const netToken0 = swap.amount0In - swap.amount0Out\n          const netToken1 = swap.amount1In - swap.amount1Out\n\n          let newTxn = {}\n\n          if (netToken0 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token0Amount = Math.abs(netToken0)\n            newTxn.token1Amount = Math.abs(netToken1)\n          } else if (netToken1 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token0Amount = Math.abs(netToken1)\n            newTxn.token1Amount = Math.abs(netToken0)\n          }\n\n          newTxn.hash = swap.transaction.id\n          newTxn.timestamp = swap.transaction.timestamp\n          newTxn.type = TXN_TYPE.SWAP\n\n          newTxn.amountUSD = swap.amountUSD\n          newTxn.account = swap.to\n          return newTxns.push(newTxn)\n        })\n      }\n\n      const filtered = newTxns.filter((item) => {\n        if (txFilter !== TXN_TYPE.ALL) {\n          return item.type === txFilter\n        }\n        return true\n      })\n      setFilteredItems(filtered)\n      let extraPages = 1\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      if (filtered.length === 0) {\n        setMaxPage(1)\n      } else {\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\n      }\n    }\n  }, [transactions, txFilter])\n\n  useEffect(() => {\n    setPage(1)\n  }, [txFilter])\n\n  const filteredList =\n    filteredItems &&\n    filteredItems\n      .sort((a, b) => {\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below780 = useMedia('(max-width: 780px)')\n\n  const ListItem = ({ item }) => {\n    return (\n      <DashGrid style={{ height: '48px' }}>\n        <DataText area=\"txn\" fontWeight=\"500\">\n          <Link color={color} external href={urls.showTransaction(item.hash)}>\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\n          </Link>\n        </DataText>\n        <DataText area=\"value\">\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\n        </DataText>\n        {!below780 && (\n          <>\n            <DataText area=\"amountOther\">\n              {formattedNum(item.token1Amount) + ' '}{' '}\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n            <DataText area=\"amountToken\">\n              {formattedNum(item.token0Amount) + ' '}{' '}\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n          </>\n        )}\n        {!below1080 && (\n          <DataText area=\"account\">\n            <Link color={color} external href={'https://testnet-fxscan.functionx.io/address/' + item.account}>\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\n            </Link>\n          </DataText>\n        )}\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  return (\n    <>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n        {below780 ? (\n          <RowBetween area=\"txn\">\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\n          </RowBetween>\n        ) : (\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ALL)\n              }}\n              active={txFilter === TXN_TYPE.ALL}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.SWAP)\n              }}\n              active={txFilter === TXN_TYPE.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ADD)\n              }}\n              active={txFilter === TXN_TYPE.ADD}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.REMOVE)\n              }}\n              active={txFilter === TXN_TYPE.REMOVE}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n        )}\n\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"textDim\"\n            area=\"value\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below780 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"amountToken\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.AMOUNT0)\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\n              }}\n            >\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        <>\n          {!below780 && (\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area=\"amountOther\"\n                color=\"textDim\"\n                onClick={() => {\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\n                }}\n              >\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          )}\n          {!below1080 && (\n            <Flex alignItems=\"center\">\n              <TYPE.body area=\"account\">Account</TYPE.body>\n            </Flex>\n          )}\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"time\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\n              }}\n            >\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        </>\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {!filteredList ? (\n          <LocalLoader />\n        ) : filteredList.length === 0 ? (\n          <EmptyCard>No recent transactions found.</EmptyCard>\n        ) : (\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </>\n  )\n}\n\nexport default TxnList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { formattedNum } from '../../utils'\nimport styled from 'styled-components'\nimport { usePrevious } from 'react-use'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { IconWrapper } from '..'\n\ndayjs.extend(utc)\n\nexport const CHART_TYPES = {\n  BAR: 'BAR',\n  AREA: 'AREA',\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\n// constant height for charts\nconst HEIGHT = 300\n\nconst TradingViewChart = ({\n  type = CHART_TYPES.BAR,\n  data,\n  base,\n  baseChange,\n  field,\n  title,\n  width,\n  useWeekly = false,\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef()\n\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n  const dataPrev = usePrevious(data)\n\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated && type === CHART_TYPES.BAR) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id' + type)\n      let node = document.getElementById('test-id' + type)\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, data, dataPrev, type])\n\n  // parese the data and format for tardingview consumption\n  const formattedData = data?.map((entry) => {\n    return {\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\n      value: parseFloat(entry[field]),\n    }\n  })\n\n  // adjust the scale based on the type of chart\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reset the chart if them switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id' + type)\n      let node = document.getElementById('test-id' + type)\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme, type])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    if (!chartCreated && formattedData) {\n      var chart = createChart(ref.current, {\n        width: width,\n        height: HEIGHT,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: topScale,\n            bottom: 0,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        grid: {\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          vertLine: {\n            visible: true,\n            style: 0,\n            width: 2,\n            color: 'rgba(32, 38, 46, 0.1)',\n            labelVisible: false,\n          },\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val, true),\n        },\n      })\n\n      var series =\n        type === CHART_TYPES.BAR\n          ? chart.addHistogramSeries({\n              color: '#FF8CC3',\n              priceFormat: {\n                type: 'volume',\n              },\n              scaleMargins: {\n                top: 0.32,\n                bottom: 0,\n              },\n              lineColor: '#FF8CC3',\n              lineWidth: 3,\n            })\n          : chart.addAreaSeries({\n              topColor: '#FF8CC3',\n              bottomColor: 'rgba(232, 65, 66, 0)',\n              lineColor: '#FF8CC3',\n              lineWidth: 3,\n            })\n\n      series.setData(formattedData)\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id' + type)\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.fontWeight = '500'\n      toolTip.style.left = -4 + 'px'\n      toolTip.style.top = '-' + 8 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // format numbers\n      let percentChange = baseChange?.toFixed(2)\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\n      let color = percentChange >= 0 ? 'green' : 'red'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML =\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${\n            type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\n          }</div>` +\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\n          formattedNum(base ?? 0, true) +\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\n          '</div>'\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > HEIGHT\n        ) {\n          setLastBarText()\n        } else {\n          let dateStr = useWeekly\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n                .startOf('week')\n                .format('MMMM D, YYYY') +\n              '-' +\n              dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n                .endOf('week')\n                .format('MMMM D, YYYY')\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\n          var price = param.seriesPrices.get(series)\n\n          toolTip.innerHTML =\n            `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            formattedNum(price, true) +\n            '</div>' +\n            '<div>' +\n            dateStr +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [\n    base,\n    baseChange,\n    chartCreated,\n    darkMode,\n    data,\n    formattedData,\n    textColor,\n    title,\n    topScale,\n    type,\n    useWeekly,\n    width,\n  ])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, HEIGHT)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, width])\n\n  return (\n    <Wrapper>\n      <div ref={ref} id={'test-id' + type} />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TradingViewChart\n","import React from 'react'\nimport { Button as RebassButton } from 'rebass/styled-components'\nimport styled from 'styled-components'\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\nimport { darken, transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { StyledIcon } from '..'\n\nconst Base = styled(RebassButton)`\n  padding: 8px 12px;\n  font-size: 0.825rem;\n  font-weight: 600;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid transparent;\n  outline: none;\n  border-bottom-right-radius: ${({ open }) => open && '0'};\n  border-bottom-left-radius: ${({ open }) => open && '0'};\n`\n\nconst BaseCustom = styled(RebassButton)`\n  padding: 16px 12px;\n  font-size: 0.825rem;\n  font-weight: 400;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n`\n\nconst Dull = styled(Base)`\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  color: black;\n  height: 100%;\n  font-weight: 400;\n  &:hover,\n  :focus {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n  &:focus {\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\n  }\n  &:active {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n`\n\nexport default function ButtonStyled({ children, ...rest }) {\n  return <Base {...rest}>{children}</Base>\n}\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n\n  min-width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  a {\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n  }\n\n  :hover {\n    background-color: ${({ color, theme }) =>\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\n  }\n`\n\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\n  return (\n    <ButtonFaded {...rest} disabled={disabled} ope={open}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        {open ? (\n          <StyledIcon>\n            <ChevronUp size={24} />\n          </StyledIcon>\n        ) : (\n          <StyledIcon>\n            <ChevronDown size={24} />\n          </StyledIcon>\n        )}\n      </RowBetween>\n    </ButtonFaded>\n  )\n}\n\nexport const ButtonDark = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\n  color: white;\n  width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  :hover {\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\n  }\n`\n\nexport const ButtonFaded = styled(Base)`\n  background-color: ${({ theme }) => theme.bg2};\n  color: (255, 255, 255, 0.5);\n  white-space: nowrap;\n\n  :hover {\n    opacity: 0.5;\n  }\n`\n\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\n  return (\n    <Dull {...rest}>\n      <ContentWrapper>\n        <Plus size={16} />\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n      </ContentWrapper>\n    </Dull>\n  )\n}\n\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\n  return (\n    <BaseCustom bg={bgColor} color={color} {...rest}>\n      {children}\n    </BaseCustom>\n  )\n}\n\nexport const OptionButton = styled.div`\n  font-weight: 500;\n  width: fit-content;\n  white-space: nowrap;\n  padding: 6px;\n  border-radius: 6px;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  background-color: ${({ active, theme }) => active && theme.bg3};\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\n  }\n`\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\nimport { ResponsiveContainer } from 'recharts'\nimport { timeframeOptions } from '../../constants'\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\nimport { useMedia } from 'react-use'\nimport DropdownSelect from '../DropdownSelect'\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\nimport { RowFixed } from '../Row'\nimport { OptionButton } from '../ButtonStyled'\nimport { getTimeframe } from '../../utils'\nimport { TYPE } from '../../Theme'\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n}\n\nconst VOLUME_WINDOW = {\n  WEEKLY: 'WEEKLY',\n  DAYS: 'DAYS',\n}\nconst GlobalChart = ({ display }) => {\n  // chart options\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\n\n  // time window and window size for chart\n  const timeWindow = timeframeOptions.ALL_TIME\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\n\n  // global historical data\n  const [dailyData, weeklyData] = useGlobalChartData()\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD, oneWeekVolume, weeklyVolumeChange } =\n    useGlobalData()\n\n  // based on window, get starttim\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const chartDataFiltered = useMemo(() => {\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\n    return (\n      currentData &&\n      Object.keys(currentData)\n        ?.map((key) => {\n          let item = currentData[key]\n          if (item.date > utcStartTime) {\n            return item\n          } else {\n            return true\n          }\n        })\n        .filter((item) => {\n          return !!item\n        })\n    )\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\n  const below800 = useMedia('(max-width: 800px)')\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return chartDataFiltered ? (\n    <>\n      {below800 && (\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#ff007a'} />\n      )}\n\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\n          <TradingViewChart\n            data={dailyData}\n            base={totalLiquidityUSD}\n            baseChange={liquidityChangeUSD}\n            title=\"Liquidity\"\n            field=\"totalLiquidityUSD\"\n            width={width}\n            type={CHART_TYPES.AREA}\n          />\n        </ResponsiveContainer>\n      )}\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={60 / 28}>\n          <TradingViewChart\n            data={chartDataFiltered}\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\n            width={width}\n            type={CHART_TYPES.BAR}\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\n          />\n        </ResponsiveContainer>\n      )}\n      {display === 'volume' && (\n        <RowFixed\n          style={{\n            bottom: '70px',\n            position: 'absolute',\n            left: '20px',\n            zIndex: 10,\n          }}\n        >\n          <OptionButton\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\n          >\n            <TYPE.body>D</TYPE.body>\n          </OptionButton>\n          <OptionButton\n            style={{ marginLeft: '4px' }}\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\n          >\n            <TYPE.body>W</TYPE.body>\n          </OptionButton>\n        </RowFixed>\n      )}\n    </>\n  ) : (\n    ''\n  )\n}\n\nexport default GlobalChart\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowFixed } from '../Row'\nimport TokenLogo from '../TokenLogo'\nimport { Search as SearchIcon, X } from 'react-feather'\nimport { BasicLink } from '../Link'\n\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { useMedia } from 'react-use'\nimport { useAllPairsInUniswap, useAllTokensInUniswap } from '../../contexts/GlobalData'\nimport { TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\n\nimport { transparentize } from 'polished'\nimport { client } from '../../apollo/client'\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\n\nconst Container = styled.div`\n  height: 48px;\n  z-index: 30;\n  position: relative;\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 12px 16px;\n  border-radius: 12px;\n  background: ${({ theme, small, open }) => (small ? (open ? theme.bg6 : 'none') : transparentize(0.4, theme.bg6))};\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\n  z-index: 9999;\n  width: 100%;\n  min-width: 300px;\n  box-sizing: border-box;\n  box-shadow: ${({ open, small }) =>\n    !open && !small\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n      : 'none'};\n  @media screen and (max-width: 500px) {\n    background: ${({ theme }) => theme.bg6};\n    box-shadow: ${({ open }) =>\n      !open\n        ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n        : 'none'};\n  }\n`\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  width: 100%;\n  color: ${({ theme }) => theme.text1};\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst SearchIconLarge = styled(SearchIcon)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  pointer-events: none;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst CloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text3};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 540px;\n  overflow: auto;\n  left: 0;\n  padding-bottom: 20px;\n  background: ${({ theme }) => theme.bg6};\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n`\n\nconst MenuItem = styled(Row)`\n  padding: 1rem;\n  font-size: 0.85rem;\n  & > * {\n    margin-right: 6px;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst Heading = styled(Row)`\n  padding: 1rem;\n  display: ${({ hide = false }) => hide && 'none'};\n`\n\nconst Gray = styled.span`\n  color: #888d9b;\n`\n\nconst Blue = styled.span`\n  color: #2172e5;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Search = ({ small = false }) => {\n  let allTokens = useAllTokensInUniswap()\n  const allTokenData = useAllTokenData()\n\n  let allPairs = useAllPairsInUniswap()\n  const allPairData = useAllPairData()\n\n  const [showMenu, toggleMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const [, toggleShadow] = useState(false)\n  const [, toggleBottomShadow] = useState(false)\n\n  // fetch new data on tokens and pairs if needed\n  useTokenData(value)\n  usePairData(value)\n\n  const below700 = useMedia('(max-width: 700px)')\n  const below470 = useMedia('(max-width: 470px)')\n  const below410 = useMedia('(max-width: 410px)')\n\n  useEffect(() => {\n    if (value !== '') {\n      toggleMenu(true)\n    } else {\n      toggleMenu(false)\n    }\n  }, [value])\n\n  const [searchedTokens, setSearchedTokens] = useState([])\n  const [searchedPairs, setSearchedPairs] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (value?.length > 0) {\n          let tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: value ? value.toUpperCase() : '',\n              id: value,\n            },\n          })\n\n          let pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map((t) => t.id),\n              id: value,\n            },\n          })\n\n          setSearchedPairs(\n            updateNameData(pairs.data.as0)\n              .concat(updateNameData(pairs.data.as1))\n              .concat(updateNameData(pairs.data.asAddress))\n          )\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\n          setSearchedTokens(foundTokens)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchData()\n  }, [value])\n\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  }\n\n  // add the searched tokens to the list if not found yet\n  allTokens = allTokens.concat(\n    searchedTokens.filter((searchedToken) => {\n      let included = false\n      updateNameData()\n      allTokens.map((token) => {\n        if (token.id === searchedToken.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniqueTokens = []\n  let found = {}\n  allTokens &&\n    allTokens.map((token) => {\n      if (!found[token.id]) {\n        found[token.id] = true\n        uniqueTokens.push(token)\n      }\n      return true\n    })\n\n  allPairs = allPairs.concat(\n    searchedPairs.filter((searchedPair) => {\n      let included = false\n      allPairs.map((pair) => {\n        if (pair.id === searchedPair.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniquePairs = []\n  let pairsFound = {}\n  allPairs &&\n    allPairs.map((pair) => {\n      if (!pairsFound[pair.id]) {\n        pairsFound[pair.id] = true\n        uniquePairs.push(pair)\n      }\n      return true\n    })\n\n  const filteredTokenList = useMemo(() => {\n    return uniqueTokens\n      ? uniqueTokens\n          .sort((a, b) => {\n            const tokenA = allTokenData[a.id]\n            const tokenB = allTokenData[b.id]\n            if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\n            }\n            if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\n              return -1\n            }\n            if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\n            }\n            return 1\n          })\n          .filter((token) => {\n            if (TOKEN_BLACKLIST.includes(token.id)) {\n              return false\n            }\n            const regexMatches = Object.keys(token).map((tokenEntryKey) => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (tokenEntryKey === 'id' && isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'symbol' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'name' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              return false\n            })\n            return regexMatches.some((m) => m)\n          })\n      : []\n  }, [allTokenData, uniqueTokens, value])\n\n  const filteredPairList = useMemo(() => {\n    return uniquePairs\n      ? uniquePairs\n          .sort((a, b) => {\n            const pairA = allPairData[a.id]\n            const pairB = allPairData[b.id]\n            if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n              return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\n            }\n            if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\n              return -1\n            }\n            if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n              return 1\n            }\n            return 0\n          })\n          .filter((pair) => {\n            if (PAIR_BLACKLIST.includes(pair.id)) {\n              return false\n            }\n            if (value && value.includes(' ')) {\n              const pairA = value.split(' ')[0]?.toUpperCase()\n              const pairB = value.split(' ')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            if (value && value.includes('-')) {\n              const pairA = value.split('-')[0]?.toUpperCase()\n              const pairB = value.split('-')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            const regexMatches = Object.keys(pair).map((field) => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (field === 'id' && isAddress) {\n                return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (field === 'token0') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              if (field === 'token1') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              return false\n            })\n            return regexMatches.some((m) => m)\n          })\n      : []\n  }, [allPairData, uniquePairs, value])\n\n  useEffect(() => {\n    if (Object.keys(filteredTokenList).length > 2) {\n      toggleShadow(true)\n    } else {\n      toggleShadow(false)\n    }\n  }, [filteredTokenList])\n\n  useEffect(() => {\n    if (Object.keys(filteredPairList).length > 2) {\n      toggleBottomShadow(true)\n    } else {\n      toggleBottomShadow(false)\n    }\n  }, [filteredPairList])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [pairsShown, setPairsShown] = useState(3)\n\n  function onDismiss() {\n    setPairsShown(3)\n    setTokensShown(3)\n    toggleMenu(false)\n    setValue('')\n  }\n\n  // refs to detect clicks outside modal\n  const wrapperRef = useRef()\n  const menuRef = useRef()\n\n  const handleClick = (e) => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3)\n      setTokensShown(3)\n      toggleMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  return (\n    <Container small={small}>\n      <Wrapper open={showMenu} shadow={true} small={small}>\n        <Input\n          large={!small}\n          type={'text'}\n          ref={wrapperRef}\n          placeholder={\n            small\n              ? ''\n              : below410\n              ? 'Search...'\n              : below470\n              ? 'Search FXSwap...' // added by Issei\n              : below700\n              ? 'Search pairs and tokens...'\n              : 'Search FXSwap pairs and tokens...' // added by Issei\n            //: 'Search Uniswap pairs and tokens...' // removed by Issei\n          }\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          onFocus={() => {\n            if (!showMenu) {\n              toggleMenu(true)\n            }\n          }}\n        />\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\n      </Wrapper>\n      <Menu hide={!showMenu} ref={menuRef}>\n        <Heading>\n          <Gray>Pairs</Gray>\n        </Heading>\n        <div>\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredPairList &&\n            filteredPairList.slice(0, pairsShown).map((pair) => {\n              //format incorrect names\n              updateNameData(pair)\n              return (\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\n                  <MenuItem>\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\n                    <TYPE.body style={{ marginLeft: '10px' }}>\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\n                    </TYPE.body>\n                  </MenuItem>\n                </BasicLink>\n              )\n            })}\n          <Heading\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\n          >\n            <Blue\n              onClick={() => {\n                setPairsShown(pairsShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n        <Heading>\n          <Gray>Tokens</Gray>\n        </Heading>\n        <div>\n          {Object.keys(filteredTokenList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredTokenList.slice(0, tokensShown).map((token) => {\n            // update displayed names\n            updateNameData({ token0: token })\n            return (\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\n                <MenuItem>\n                  <RowFixed>\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\n                  </RowFixed>\n                </MenuItem>\n              </BasicLink>\n            )\n          })}\n\n          <Heading\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\n          >\n            <Blue\n              onClick={() => {\n                setTokensShown(tokensShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n      </Menu>\n    </Container>\n  )\n}\n\nexport default Search\n","import { Box as RebassBox } from 'rebass'\nimport styled, { css } from 'styled-components'\n\nconst panelPseudo = css`\n  :after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 10px;\n  }\n\n  @media only screen and (min-width: 40em) {\n    :after {\n      content: unset;\n    }\n  }\n`\n\nconst Panel = styled(RebassBox)`\n  position: relative;\n  background-color: ${({ theme }) => theme.advancedBG};\n  padding: 1.25rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\n  :hover {\n    cursor: ${({ hover }) => hover && 'pointer'};\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\n  }\n\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\n\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\n\n  ${(props) =>\n    props.grouped &&\n    css`\n      @media only screen and (min-width: 40em) {\n        &:first-of-type {\n          border-radius: 20px 20px 0 0;\n        }\n        &:last-of-type {\n          border-radius: 0 0 20px 20px;\n        }\n      }\n    `}\n\n  ${(props) =>\n    props.rounded &&\n    css`\n      border-radius: 8px;\n      @media only screen and (min-width: 40em) {\n        border-radius: 10px;\n      }\n    `};\n\n  ${(props) => !props.last && panelPseudo}\n`\n\nexport default Panel\n\n// const Panel = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   border-radius: 12px;\n//   background-color: ${({ theme }) => theme.advancedBG};\n//   padding: 1.25rem;\n//   box-sizing: border-box;\n//   box-shadow: 0 1.1px 2.8px -9px rgba(0, 0, 0, 0.008), 0 2.7px 6.7px -9px rgba(0, 0, 0, 0.012),\n//     0 5px 12.6px -9px rgba(0, 0, 0, 0.015), 0 8.9px 22.6px -9px rgba(0, 0, 0, 0.018),\n//     0 16.7px 42.2px -9px rgba(0, 0, 0, 0.022), 0 40px 101px -9px rgba(0, 0, 0, 0.03);\n// `\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport Panel from '../Panel'\nimport { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\nimport { TYPE } from '../../Theme'\nimport { usePairData } from '../../contexts/PairData'\nimport { formattedNum } from '../../utils'\n\nconst PriceCard = styled(Panel)`\n  position: absolute;\n  right: -220px;\n  width: 220px;\n  top: -20px;\n  z-index: 9999;\n  height: fit-content;\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nfunction formatPercent(rawPercent) {\n  if (rawPercent < 0.01) {\n    return '<1%'\n  } else return parseFloat(rawPercent * 100).toFixed(0) + '%'\n}\n\nexport default function UniPrice() {\n  // Added the below because pair contract address require modification - by Issei\n  // these are the WFX and stable coin pairs\n  const daiPair = usePairData('0xfe1bc8fe7e4825c216c9568434ab58824f6dea21')\n  const usdcPair = usePairData('0xfe1bc8fe7e4825c216c9568434ab58824f6dea21')\n  const usdtPair = usePairData('0x58c55107acc9921f7f162d91cec0ab10717ca293')\n  // commented out the below - by Issei\n  // const daiPair = usePairData('0xa478c2975ab1ea89e8196811f51a7b7ade33eb11')\n  // const usdcPair = usePairData('0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc')\n  // const usdtPair = usePairData('0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852')\n\n  const totalLiquidity = useMemo(() => {\n    return daiPair && usdcPair && usdtPair\n      ? daiPair.trackedReserveUSD + usdcPair.trackedReserveUSD + usdtPair.trackedReserveUSD\n      : 0\n  }, [daiPair, usdcPair, usdtPair])\n\n  const daiPerEth = daiPair ? parseFloat(daiPair.token0Price).toFixed(2) : '-'\n  const usdcPerEth = usdcPair ? parseFloat(usdcPair.token0Price).toFixed(2) : '-'\n  const usdtPerEth = usdtPair ? parseFloat(usdtPair.token1Price).toFixed(2) : '-'\n\n  return (\n    <PriceCard>\n      <AutoColumn gap=\"10px\">\n        <RowFixed>\n          {/* added by Issei */}\n          <TYPE.main>DAI/WFX: {formattedNum(daiPerEth, true)}</TYPE.main>\n          {/* commented out by Issei */}\n          {/* <TYPE.main>DAI/ETH: {formattedNum(daiPerEth, true)}</TYPE.main> */}\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {daiPair && totalLiquidity ? formatPercent(daiPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n        <RowFixed>\n          {/* added by Issei */}\n          <TYPE.main>USDC/WFX: {formattedNum(usdcPerEth, true)}</TYPE.main>\n          {/* commented out by Issei */}\n          {/* <TYPE.main>USDC/ETH: {formattedNum(usdcPerEth, true)}</TYPE.main> */}\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {usdcPair && totalLiquidity ? formatPercent(usdcPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n        <RowFixed>\n          {/* added by Issei */}\n          <TYPE.main>USDT/WFX: {formattedNum(usdtPerEth, true)}</TYPE.main>\n          {/* commented out by Issei */}\n          {/* <TYPE.main>USDT/ETH: {formattedNum(usdtPerEth, true)}</TYPE.main> */}\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {usdtPair && totalLiquidity ? formatPercent(usdtPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n      </AutoColumn>\n    </PriceCard>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RowFixed, RowBetween } from '../Row'\nimport { useMedia } from 'react-use'\nimport { useGlobalData, useEthPrice } from '../../contexts/GlobalData'\nimport { formattedNum, localNumber } from '../../utils'\n\nimport UniPrice from '../UniPrice'\nimport { TYPE } from '../../Theme'\n\nconst Header = styled.div`\n  width: 100%;\n  position: sticky;\n  top: 0;\n`\n\nconst Medium = styled.span`\n  font-weight: 500;\n`\n\nexport default function GlobalStats() {\n  const below1295 = useMedia('(max-width: 1295px)')\n  const below1180 = useMedia('(max-width: 1180px)')\n  const below1024 = useMedia('(max-width: 1024px)')\n  const below400 = useMedia('(max-width: 400px)')\n  const below816 = useMedia('(max-width: 816px)')\n\n  const [showPriceCard, setShowPriceCard] = useState(false)\n\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\n  const [ethPrice] = useEthPrice()\n  const formattedEthPrice = ethPrice ? formattedNum(ethPrice, true) : '-'\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.003, true) : ''\n\n  return (\n    <Header>\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.5rem' }}>\n        <RowFixed>\n          {!below400 && (\n            <TYPE.main\n              mr={'1rem'}\n              onMouseEnter={() => {\n                setShowPriceCard(true)\n              }}\n              onMouseLeave={() => {\n                setShowPriceCard(false)\n              }}\n              style={{ position: 'relative' }}\n            >\n              {/* Added below by Issei */}\n              WFX Price: <Medium>{formattedEthPrice}</Medium>\n              {/* Removed below by Issei */}\n              {/* ETH Price: <Medium>{formattedEthPrice}</Medium> */}\n              {showPriceCard && <UniPrice />}\n            </TYPE.main>\n          )}\n\n          {!below1180 && (\n            <TYPE.main mr={'1rem'}>\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1024 && (\n            <TYPE.main mr={'1rem'}>\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1295 && (\n            <TYPE.main mr={'1rem'}>\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\n            </TYPE.main>\n          )}\n        </RowFixed>\n      </RowBetween>\n    </Header>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { TYPE } from '../../Theme'\nimport { RowFixed } from '../Row'\n\nconst StyleCheckbox = styled.input`\n  background: ${({ theme }) => theme.bg2};\n\n  :before {\n    background: #f35429;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ButtonText = styled(TYPE.main)`\n  cursor: pointer;\n  :hover {\n    opacity: 0.6;\n  }\n`\n\nconst CheckBox = ({ checked, setChecked, text }) => {\n  return (\n    <RowFixed>\n      <StyleCheckbox name=\"checkbox\" type=\"checkbox\" checked={checked} onChange={setChecked} />\n      <ButtonText ml={'4px'} onClick={setChecked}>\n        {text}\n      </ButtonText>\n    </RowFixed>\n  )\n}\n\nexport default CheckBox\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport styled from 'styled-components'\n\nimport { AutoRow, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport PairList from '../components/PairList'\nimport TopTokenList from '../components/TokenList'\nimport TxnList from '../components/TxnList'\nimport GlobalChart from '../components/GlobalChart'\nimport Search from '../components/Search'\nimport GlobalStats from '../components/GlobalStats'\n\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\nimport { useAllPairData } from '../contexts/PairData'\nimport { useMedia } from 'react-use'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { formattedNum, formattedPercent } from '../utils'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { CustomLink } from '../components/Link'\n\nimport { PageWrapper, ContentWrapper } from '../components'\nimport CheckBox from '../components/Checkbox'\nimport QuestionHelper from '../components/QuestionHelper'\n\nconst ListOptions = styled(AutoRow)`\n  height: 40px;\n  width: 100%;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  @media screen and (max-width: 640px) {\n    font-size: 1rem;\n  }\n`\n\nconst GridRow = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 6px;\n  align-items: start;\n  justify-content: space-between;\n`\n\nfunction GlobalPage() {\n  // get data for lists and totals\n  const allPairs = useAllPairData()\n  const allTokens = useAllTokenData()\n  const transactions = useGlobalTransactions()\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\n\n  // breakpoints\n  const below800 = useMedia('(max-width: 800px)')\n\n  // scrolling refs\n  useEffect(() => {\n    document.querySelector('body').scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  // for tracked data on pairs\n  const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, '#6318DA')} />\n      <ContentWrapper>\n        <div>\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: below800 ? '0' : '24px' }}>\n            <TYPE.largeHeader>{below800 ? 'FXSwap Analytics' : 'FXSwap Analytics'}</TYPE.largeHeader>\n            <Search />\n            <GlobalStats />\n          </AutoColumn>\n          {below800 && ( // mobile card\n            <Box mb={20}>\n              <Panel>\n                <Box>\n                  <AutoColumn gap=\"36px\">\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : '-'}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{volumeChangeUSD ? formattedPercent(volumeChangeUSD) : '-'}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Total Liquidity</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : '-'}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>\n                          {liquidityChangeUSD ? formattedPercent(liquidityChangeUSD) : '-'}\n                        </TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </AutoColumn>\n                </Box>\n              </Panel>\n            </Box>\n          )}\n          {!below800 && (\n            <GridRow>\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n              <Panel style={{ height: '100%' }}>\n                <GlobalChart display=\"volume\" />\n              </Panel>\n            </GridRow>\n          )}\n          {below800 && (\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n            </AutoColumn>\n          )}\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1.125rem'} style={{ whiteSpace: 'nowrap' }}>\n                Top Tokens\n              </TYPE.main>\n              <CustomLink to={'/tokens'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <TopTokenList tokens={allTokens} />\n          </Panel>\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1rem'} style={{ whiteSpace: 'nowrap' }}>\n                Top Pairs\n              </TYPE.main>\n              <AutoRow gap=\"4px\" width=\"100%\" justifyContent=\"flex-end\">\n                <CheckBox\n                  checked={useTracked}\n                  setChecked={() => setUseTracked(!useTracked)}\n                  text={'Hide untracked pairs'}\n                />\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without WFX or stablecoins.\" />\n                <CustomLink to={'/pairs'}>See All</CustomLink>\n              </AutoRow>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <PairList pairs={allPairs} useTracked={useTracked} />\n          </Panel>\n          <span>\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n              Transactions\n            </TYPE.main>\n          </span>\n          <Panel style={{ margin: '1rem 0' }}>\n            <TxnList transactions={transactions} />\n          </Panel>\n        </div>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(GlobalPage)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart, CrosshairMode } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport { formattedNum } from '../../utils'\nimport { usePrevious } from 'react-use'\nimport styled from 'styled-components'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text1}\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst CandleStickChart = ({\n  data,\n  width,\n  height = 300,\n  base,\n  margin = true,\n  valueFormatter = (val) => formattedNum(val, true),\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef()\n\n  const formattedData = data?.map((entry) => {\n    return {\n      time: parseFloat(entry.timestamp),\n      open: parseFloat(entry.open),\n      low: parseFloat(entry.open),\n      close: parseFloat(entry.close),\n      high: parseFloat(entry.close),\n    }\n  })\n\n  if (formattedData && formattedData.length > 0) {\n    formattedData.push({\n      time: dayjs().unix(),\n      open: parseFloat(formattedData[formattedData.length - 1].close),\n      close: parseFloat(base),\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n    })\n  }\n\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n  const dataPrev = usePrevious(data)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reset the chart if theme switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme])\n\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, data, dataPrev])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    if (!chartCreated) {\n      const chart = createChart(ref.current, {\n        width: width,\n        height: height,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        grid: {\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n        },\n        rightPriceScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n          visible: true,\n        },\n        timeScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val),\n        },\n      })\n\n      var candleSeries = chart.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green',\n      })\n\n      candleSeries.setData(formattedData)\n\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id')\n      toolTip.className = 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\n      toolTip.style.top = 50 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML = base\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\n          : ''\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > height\n        ) {\n          setLastBarText()\n        } else {\n          var price = param.seriesPrices.get(candleSeries).close\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\n          toolTip.innerHTML =\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            valueFormatter(price) +\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\n            time +\n            ' UTC' +\n            '</span>' +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, height)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, height, width])\n\n  return (\n    <div>\n      <div ref={ref} id=\"test-id\" />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </div>\n  )\n}\n\nexport default CandleStickChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia, usePrevious } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { AutoColumn } from '../Column'\nimport { Activity } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  min-height: 300px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst PriceOption = styled(OptionButton)`\n  border-radius: 2px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  PRICE: 'Price',\n  LINE_PRICE: 'Price (Line)',\n}\n\nconst DATA_FREQUENCY = {\n  DAY: 'DAY',\n  HOUR: 'HOUR',\n  LINE: 'LINE',\n}\n\nconst TokenChart = ({ address, color, base }) => {\n  // settings for the window and candle width\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // reset view on new address\n  const addressPrev = usePrevious(address)\n  useEffect(() => {\n    if (address !== addressPrev && addressPrev) {\n      setChartFilter(CHART_VIEW.LIQUIDITY)\n    }\n  }, [address, addressPrev])\n\n  let chartData = useTokenChartData(address)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\n  const prevWindow = usePrevious(timeWindow)\n\n  // hourly and daily price data based on the current time window\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\n\n  const priceData =\n    timeWindow === timeframeOptions.MONTH\n      ? // monthly selected\n        frequency === DATA_FREQUENCY.DAY\n        ? dailyMonth\n        : hourlyMonth\n      : // weekly selected\n      timeWindow === timeframeOptions.WEEK\n      ? frequency === DATA_FREQUENCY.DAY\n        ? dailyWeek\n        : hourlyWeek\n      : // all time selected\n      frequency === DATA_FREQUENCY.DAY\n      ? dailyAll\n      : hourlyAll\n\n  // switch to hourly data when switched to week window\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\n      setFrequency(DATA_FREQUENCY.HOUR)\n    }\n  }, [prevWindow, timeWindow])\n\n  // switch to daily data if switche to month or all time view\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n  }, [prevWindow, timeWindow])\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\n\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <RowBetween\n          mb={\n            chartFilter === CHART_VIEW.LIQUIDITY ||\n            chartFilter === CHART_VIEW.VOLUME ||\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\n              ? 40\n              : 0\n          }\n          align=\"flex-start\"\n        >\n          <AutoColumn gap=\"8px\">\n            <RowFixed>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\n                style={{ marginRight: '6px' }}\n              >\n                Liquidity\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.VOLUME}\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\n                style={{ marginRight: '6px' }}\n              >\n                Volume\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.PRICE}\n                onClick={() => {\n                  setChartFilter(CHART_VIEW.PRICE)\n                }}\n              >\n                Price\n              </OptionButton>\n            </RowFixed>\n            {chartFilter === CHART_VIEW.PRICE && (\n              <AutoRow gap=\"4px\">\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.DAY}\n                  onClick={() => {\n                    setTimeWindow(timeframeOptions.MONTH)\n                    setFrequency(DATA_FREQUENCY.DAY)\n                  }}\n                >\n                  D\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.HOUR}\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\n                >\n                  H\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.LINE}\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\n                >\n                  <Activity size={14} />\n                </PriceOption>\n              </AutoRow>\n            )}\n          </AutoColumn>\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={120}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'totalLiquidityUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n      {chartFilter === CHART_VIEW.PRICE &&\n        (frequency === DATA_FREQUENCY.LINE ? (\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <XAxis\n                tickLine={false}\n                axisLine={false}\n                interval=\"preserveEnd\"\n                tickMargin={16}\n                minTickGap={120}\n                tickFormatter={(tick) => toNiceDate(tick)}\n                dataKey=\"date\"\n                tick={{ fill: textColor }}\n                type={'number'}\n                domain={domain}\n              />\n              <YAxis\n                type=\"number\"\n                orientation=\"right\"\n                tickFormatter={(tick) => '$' + toK(tick)}\n                axisLine={false}\n                tickLine={false}\n                interval=\"preserveEnd\"\n                minTickGap={80}\n                yAxisId={0}\n                tick={{ fill: textColor }}\n              />\n              <Tooltip\n                cursor={true}\n                formatter={(val) => formattedNum(val, true)}\n                labelFormatter={(label) => toNiceDateYear(label)}\n                labelStyle={{ paddingTop: 4 }}\n                contentStyle={{\n                  padding: '10px 14px',\n                  borderRadius: 10,\n                  borderColor: color,\n                  color: 'black',\n                }}\n                wrapperStyle={{ top: -70, left: -10 }}\n              />\n              <Area\n                key={'other'}\n                dataKey={'priceUSD'}\n                stackId=\"2\"\n                strokeWidth={2}\n                dot={false}\n                type=\"monotone\"\n                name={'Price'}\n                yAxisId={0}\n                stroke={darken(0.12, color)}\n                fill=\"url(#colorUv)\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        ) : priceData ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart data={priceData} width={width} base={base} />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              orientation=\"right\"\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default TokenChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../../hooks'\nimport { CheckCircle, Copy } from 'react-feather'\nimport { StyledIcon } from '..'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <StyledIcon>\n            <CheckCircle size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <StyledIcon>\n            <Copy size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n","import React from 'react'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport { AlertTriangle } from 'react-feather'\nimport { RowBetween, RowFixed } from '../Row'\nimport { ButtonDark } from '../ButtonStyled'\nimport { AutoColumn } from '../Column'\nimport { Hover } from '..'\nimport Link from '../Link'\nimport { useMedia } from 'react-use'\n\nconst WarningWrapper = styled.div`\n  border-radius: 20px;\n  border: 1px solid #f82d3a;\n  background: rgba(248, 45, 58, 0.05);\n  padding: 1rem;\n  color: #f82d3a;\n  display: ${({ show }) => !show && 'none'};\n  margin: 0 2rem 2rem 2rem;\n  position: relative;\n\n  @media screen and (max-width: 800px) {\n    width: 80% !important;\n    margin-left: 5%;\n  }\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  min-height: 20px;\n  min-width: 20px;\n  stroke: red;\n`\n\nexport default function Warning({ type, show, setShow, address }) {\n  const below800 = useMedia('(max-width: 800px)')\n\n  const textContent = below800 ? (\n    <div>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\n        tokens that claim to represent projects that do not have a token.\n      </Text>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Similar to FxScan, this site automatically tracks analytics for all ERC20 tokens independent of token integrity.\n        Please do your own research before interacting with any ERC20 token.\n      </Text>\n    </div>\n  ) : (\n    <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n      Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\n      tokens that claim to represent projects that do not have a token. Similar to FxScan, this site automatically\n      tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before\n      interacting with any ERC20 token.\n    </Text>\n  )\n\n  return (\n    <WarningWrapper show={show}>\n      <AutoColumn gap=\"4px\">\n        <RowFixed>\n          <StyledWarningIcon />\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\n            Token Safety Alert\n          </Text>\n        </RowFixed>\n        {textContent}\n        {below800 ? (\n          <div>\n            <Hover style={{ marginTop: '10px' }}>\n              <Link\n                fontWeight={500}\n                lineHeight={'145.23%'}\n                color={'#2172E5'}\n                href={'https://testnet-fxscan.functionx.io/address/' + address}\n                target=\"_blank\"\n              >\n                View {type === 'token' ? 'token' : 'pair'} contract on FxScan\n              </Link>\n            </Hover>\n            <RowBetween style={{ marginTop: '20px' }}>\n              <div />\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n                I understand\n              </ButtonDark>\n            </RowBetween>\n          </div>\n        ) : (\n          <RowBetween style={{ marginTop: '10px' }}>\n            <Hover>\n              <Link\n                fontWeight={500}\n                lineHeight={'145.23%'}\n                color={'#2172E5'}\n                href={'https://testnet-fxscan.functionx.io/address/' + address}\n                target=\"_blank\"\n              >\n                View {type === 'token' ? 'token' : 'pair'} contract on FxScan\n              </Link>\n            </Hover>\n            <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n              I understand\n            </ButtonDark>\n          </RowBetween>\n        )}\n      </AutoColumn>\n    </WarningWrapper>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst Wrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function HoverText({ text, children }: { text: string; children: any }) {\n  const [show, setShow] = useState<boolean>(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <Wrapper>\n      <Tooltip text={text} show={show}>\n        <Wrapper onMouseEnter={open} onMouseLeave={close}>\n          {children}\n        </Wrapper>\n      </Tooltip>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link from '../components/Link'\nimport Panel from '../components/Panel'\nimport TokenLogo from '../components/TokenLogo'\nimport PairList from '../components/PairList'\nimport Loader from '../components/LocalLoader'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport TxnList from '../components/TxnList'\nimport TokenChart from '../components/TokenChart'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { useColor } from '../hooks'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport { useDataForList } from '../contexts/PairData'\nimport { useEffect } from 'react'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon, BlockedWrapper, BlockedMessageWrapper } from '../components'\nimport { PlusCircle, Bookmark, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY, TOKEN_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\nimport QuestionHelper from '../components/QuestionHelper'\nimport Checkbox from '../components/Checkbox'\nimport { shortenAddress } from '../utils'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto 1fr;\n  column-gap: 30px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction TokenPage({ address, history }) {\n  const {\n    id,\n    name,\n    symbol,\n    priceUSD,\n    oneDayVolumeUSD,\n    totalLiquidityUSD,\n    volumeChangeUSD,\n    oneDayVolumeUT,\n    volumeChangeUT,\n    priceChangeUSD,\n    liquidityChangeUSD,\n    oneDayTxns,\n    txnChange,\n  } = useTokenData(address)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  // detect color from token\n  const backgroundColor = useColor(id, symbol)\n\n  const allPairs = useTokenPairs(address)\n\n  // pairs to show in pair list\n  const fetchedPairsList = useDataForList(allPairs)\n\n  // all transactions with this token\n  const transactions = useTokenTransactions(address)\n\n  // price\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\n\n  // volume\n  const volume = formattedNum(!!oneDayVolumeUSD ? oneDayVolumeUSD : oneDayVolumeUT, true)\n\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUT\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\n\n  // liquidity\n  const liquidity = formattedNum(totalLiquidityUSD, true)\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // transactions\n  const txnChangeFormatted = formattedPercent(txnChange)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below800 = useMedia('(max-width: 800px)')\n  const below600 = useMedia('(max-width: 600px)')\n  const below500 = useMedia('(max-width: 500px)')\n\n  // format for long symbol\n  const LENGTH = below1080 ? 10 : 16\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n  const [savedTokens, addToken] = useSavedTokens()\n  // const listedTokens = useListedTokens() //  removed by Issei\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  if (TOKEN_BLACKLIST.includes(address)) {\n    return (\n      <BlockedWrapper>\n        <BlockedMessageWrapper>\n          <AutoColumn gap=\"1rem\" justify=\"center\">\n            <TYPE.light style={{ textAlign: 'center' }}>\n              {BLOCKED_WARNINGS[address] ?? `This token is not supported.`}\n            </TYPE.light>\n            <Link\n              external={true}\n              href={'https://testnet-fxscan.functionx.io/address/' + address}\n            >{`More about ${shortenAddress(address)}`}</Link>\n          </AutoColumn>\n        </BlockedMessageWrapper>\n      </BlockedWrapper>\n    )\n  }\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      {/* removed by Issei */}\n      <Warning\n      // type={'token'}\n      // show={!dismissed && listedTokens && !listedTokens.includes(address)}\n      // setShow={markAsDismissed}\n      // address={address}\n      />\n      <ContentWrapper>\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\n            <TYPE.body>\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\n            </TYPE.body>\n            <Link\n              style={{ width: 'fit-content' }}\n              color={backgroundColor}\n              external\n              href={'https://testnet-fxscan.functionx.io/address/' + address}\n            >\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\n              </Text>\n            </Link>\n          </AutoRow>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        {/* below removed by Issei */}\n        {/* <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}> */}\n        <WarningGrouping>\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n            <RowBetween\n              style={{\n                flexWrap: 'wrap',\n                marginBottom: '2rem',\n                alignItems: 'flex-start',\n              }}\n            >\n              <RowFixed style={{ flexWrap: 'wrap' }}>\n                <RowFixed style={{ alignItems: 'baseline' }}>\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\n                    <RowFixed gap=\"6px\">\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\n                    </RowFixed>\n                  </TYPE.main>{' '}\n                  {!below1080 && (\n                    <>\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\n                        {price}\n                      </TYPE.main>\n                      {priceChange}\n                    </>\n                  )}\n                </RowFixed>\n              </RowFixed>\n              <span>\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\n                  {!!!savedTokens[address] && !below800 ? (\n                    <Hover onClick={() => addToken(address, symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n                  <Link href={getPoolLink(address)} target=\"_blank\">\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link href={getSwapLink(address)} target=\"_blank\">\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </span>\n            </RowBetween>\n\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Token Stats\n                  </TYPE.main>\n                  {usingUtVolume && (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  )}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n                {below1080 && price && (\n                  <Panel>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Price</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        {' '}\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                          {price}\n                        </TYPE.main>\n                        <TYPE.main>{priceChange}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </Panel>\n                )}\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {oneDayTxns ? localNumber(oneDayTxns) : 0}\n                      </TYPE.main>\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/4',\n                  }}\n                >\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\n                </Panel>\n              </PanelWrapper>\n            </>\n\n            <RowBetween style={{ marginTop: '3rem' }}>\n              <TYPE.main fontSize={'1.125rem'}>Top Pairs</TYPE.main>\n              <AutoRow gap=\"4px\" style={{ width: 'fit-content' }}>\n                <Checkbox\n                  checked={useTracked}\n                  setChecked={() => setUseTracked(!useTracked)}\n                  text={'Hide untracked pairs'}\n                />\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without WFX or stablecoins.\" />\n              </AutoRow>\n            </RowBetween>\n            <Panel\n              rounded\n              style={{\n                marginTop: '1.5rem',\n                padding: '1.125rem 0 ',\n              }}\n            >\n              {address && fetchedPairsList ? (\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} useTracked={useTracked} />\n              ) : (\n                <Loader />\n              )}\n            </Panel>\n            <RowBetween mt={40} mb={'1rem'}>\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\n            </RowBetween>\n            <Panel rounded>\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\n            </Panel>\n            <>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Symbol</TYPE.main>\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={symbol} maxCharacters={12} />\n                    </Text>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={name} maxCharacters={16} />\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={address} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link\n                      color={backgroundColor}\n                      external\n                      href={'https://testnet-fxscan.functionx.io/address/' + address}\n                    >\n                      View on FxScan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(TokenPage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { RowBetween, AutoRow } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\nimport { timeframeOptions } from '../../constants'\nimport { useMedia } from 'react-use'\nimport { EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 340px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  RATE0: 'Rate 0',\n  RATE1: 'Rate 1',\n}\n\nconst PairChart = ({ address, color, base0, base1 }) => {\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n      setHeight(ref?.current?.container?.clientHeight ?? height)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  // get data for pair, and rates\n  const pairData = usePairData(address)\n  let chartData = usePairChartData(address)\n  const hourlyData = useHourlyRateData(address, timeWindow)\n  const hourlyRate0 = hourlyData && hourlyData[0]\n  const hourlyRate1 = hourlyData && hourlyData[1]\n\n  // formatted symbols for overflow\n  const formattedSymbol0 =\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\n  const formattedSymbol1 =\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\n\n  const below1600 = useMedia('(max-width: 1600px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  if (chartData && chartData.length === 0) {\n    return (\n      <ChartWrapper>\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\n      </ChartWrapper>\n    )\n  }\n\n  /**\n   * Used to format values on chart on scroll\n   * Needs to be raw html for chart API to parse styles\n   * @param {*} val\n   */\n  function valueFormatter(val) {\n    if (chartFilter === CHART_VIEW.RATE0) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\n      )\n    }\n    if (chartFilter === CHART_VIEW.RATE1) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\n      )\n    }\n  }\n\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.LIQUIDITY)\n              }}\n            >\n              Liquidity\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.VOLUME}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.VOLUME)\n              }}\n            >\n              Volume\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE0}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE0)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE1}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE1)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              minTickGap={80}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tickMargin={16}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={' (USD)'}\n              dataKey={'reserveUSD'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n\n      {chartFilter === CHART_VIEW.RATE1 &&\n        (hourlyRate1 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate1}\n              base={base0}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.RATE0 &&\n        (hourlyRate0 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate0}\n              base={base1}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\n            barCategoryGap={1}\n            data={chartData}\n          >\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              orientation=\"right\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default PairChart\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport {\n  PageWrapper,\n  ContentWrapperLarge,\n  StyledIcon,\n  BlockedWrapper,\n  BlockedMessageWrapper,\n} from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, shortenAddress } from '../utils'\nimport { useColor } from '../hooks'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useEthPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY, PAIR_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD,\n  } = usePairData(pairAddress)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor(pairAddress)\n\n  const formattedLiquidity = reserveUSD ? formattedNum(reserveUSD, true) : formattedNum(trackedReserveUSD, true)\n  const usingUntrackedLiquidity = !trackedReserveUSD && !!reserveUSD\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // volume\n  const volume = !!oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : formattedNum(oneDayVolumeUntracked, true)\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUntracked\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  const showUSDWaning = usingUntrackedLiquidity | usingUtVolume\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [ethPrice] = useEthPrice()\n  const token0USD =\n    token0?.derivedETH && ethPrice ? formattedNum(parseFloat(token0.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  const token1USD =\n    token1?.derivedETH && ethPrice ? formattedNum(parseFloat(token1.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  // rates\n  const token0Rate = reserve0 && reserve1 ? formattedNum(reserve1 / reserve0) : '-'\n  const token1Rate = reserve0 && reserve1 ? formattedNum(reserve0 / reserve1) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = token0?.symbol.length > 6 ? token0?.symbol.slice(0, 5) + '...' : token0?.symbol\n  const formattedSymbol1 = token1?.symbol.length > 6 ? token1?.symbol.slice(0, 5) + '...' : token1?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  //const listedTokens = useListedTokens() // removed by Issei\n\n  if (PAIR_BLACKLIST.includes(pairAddress)) {\n    return (\n      <BlockedWrapper>\n        <BlockedMessageWrapper>\n          <AutoColumn gap=\"1rem\" justify=\"center\">\n            <TYPE.light style={{ textAlign: 'center' }}>\n              {BLOCKED_WARNINGS[pairAddress] ?? `This pair is not supported.`}\n            </TYPE.light>\n            <Link\n              external={true}\n              href={'https://testnet-fxscan.functionx.io/address/' + pairAddress}\n            >{`More about ${shortenAddress(pairAddress)}`}</Link>\n          </AutoColumn>\n        </BlockedMessageWrapper>\n      </BlockedWrapper>\n    )\n  }\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <span />\n      <Warning\n      // type={'pair'}\n      // show={!dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))} // removed by Issei\n      // setShow={markAsDismissed}\n      // address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {token0?.symbol}-{token1?.symbol}\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        {/* <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))\n          }\n        > original - removed the 'disabled' by Issei*/}\n        <WarningGrouping>\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexWrap: 'wrap',\n                  width: '100%',\n                }}\n              >\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {token0 && token1 && (\n                      <DoubleTokenLogo a0={token0?.id || ''} a1={token1?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {token0 && token1 ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${token0?.id}`)}>{token0.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${token1?.id}`)}>\n                            {token1.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                        ''\n                      )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{\n                    flexDirection: below1080 ? 'row-reverse' : 'initial',\n                  }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, token0.id, token1.id, token0.symbol, token1.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Link external href={getPoolLink(token0?.id, token1?.id)}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink(token0?.id, token1?.id)}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap',\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${token0?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token0?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol0} = ${token0Rate} ${formattedSymbol1} ${\n                          parseFloat(token0?.derivedETH) ? '(' + token0USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${token1?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token1?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol1} = ${token1Rate} ${formattedSymbol0}  ${\n                          parseFloat(token1?.derivedETH) ? '(' + token1USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Pair Stats\n                  </TYPE.main>\n                  {showUSDWaning ? (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  ) : null}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {formattedLiquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${token0?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token0?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve0 ? formattedNum(reserve0) : ''}{' '}\n                            <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${token1?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token1?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve1 ? formattedNum(reserve1) : ''}{' '}\n                            <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/5',\n                  }}\n                >\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserve1 / reserve0}\n                    base1={reserve0 / reserve1}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem',\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />\n                        -\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {token0 && token0.id.slice(0, 6) + '...' + token0.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token0?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {token1 && token1.id.slice(0, 6) + '...' + token1.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token1?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link\n                      color={backgroundColor}\n                      external\n                      href={'https://testnet-fxscan.functionx.io/address/' + pairAddress}\n                    >\n                      View on FxScan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserLiquidityChart } from '../../contexts/User'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { TYPE } from '../../Theme'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 390px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst UserChart = ({ account }) => {\n  const chartData = useUserLiquidityChart(account)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const below600 = useMedia('(max-width: 600px)')\n  const above1600 = useMedia('(min-width: 1600px)')\n\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#FF8CC3'} />\n        </RowBetween>\n      ) : (\n        <RowBetween mb={40}>\n          <AutoRow gap=\"10px\">\n            <TYPE.main>Liquidity Value</TYPE.main>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartData ? (\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={'#FF8CC3'} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={'#FF8CC3'} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={0}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={domain}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={6}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: '#FF8CC3',\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'valueUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, '#FF8CC3')}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      ) : (\n        <LocalLoader />\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default UserChart\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserPositionChart } from '../../contexts/User'\nimport { useTimeframe } from '../../contexts/Application'\nimport LocalLoader from '../LocalLoader'\nimport { useColor } from '../../hooks'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  max-height: 420px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VALUE: 'Value',\n  FEES: 'Fees',\n}\n\nconst PairReturnsChart = ({ account, position }) => {\n  let data = useUserPositionChart(position, account)\n\n  const [timeWindow, setTimeWindow] = useTimeframe()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  const color = useColor(position?.pair.token0.id)\n\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\n\n  // based on window, get starttime\n  let utcStartTime = getTimeframe(timeWindow)\n  data = data?.filter((entry) => entry.date >= utcStartTime)\n\n  const aspect = below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\n              Liquidity\n            </OptionButton>\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\n              Fees\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      <ResponsiveContainer aspect={aspect}>\n        {data ? (\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveStartEnd\"\n              minTickGap={0}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n\n            <Line\n              type=\"monotone\"\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\n              stroke={color}\n              yAxisId={0}\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\n            />\n          </LineChart>\n        ) : (\n          <LocalLoader />\n        )}\n      </ResponsiveContainer>\n    </ChartWrapper>\n  )\n}\n\nexport default PairReturnsChart\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useEthPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name uniswap return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name uniswap return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name uniswap return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name uniswap';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  UNISWAP_RETURN: 'UNISWAP_RETURN',\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [ethPrice] = useEthPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.liquidityTokenBalance / position.pair.totalSupply\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={position.pair.token0.id} a1={position.pair.token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName\n                  text={position.pair.token0.symbol + '-' + position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link\n                external\n                href={getPoolLink(position.pair.token0.id, position.pair.token1.id)}\n                style={{ marginRight: '.5rem' }}\n              >\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(position.pair.token0.id, position.pair.token1.id, true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"uniswap\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token0.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token0.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token1.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token1.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.UNISWAP_RETURN) {\n          return p0?.uniswap?.return > p1?.uniswap?.return ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 = (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 = (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"uniswap\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.UNISWAP_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.UNISWAP_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.UNISWAP_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getUniswapAppLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr;\n  grid-template-areas: 'number name uniswap';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr;\n    grid-template-areas: 'number name uniswap';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name uniswap';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name uniswap';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  UNISWAP_RETURN: 'UNISWAP_RETURN',\n}\n\nfunction MiningPositionList({ miningPositions }) {\n  // const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [miningPositions])\n\n  useEffect(() => {\n    if (miningPositions) {\n      let extraPages = 1\n      if (miningPositions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(miningPositions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [miningPositions])\n\n  const ListItem = ({ miningPosition, index }) => {\n    if (!miningPosition.pairData) return null\n    const pairPercentage = miningPosition.balance / miningPosition.pairData.totalSupply\n    const valueUSD = miningPosition.pairData.reserveUSD\n    const valueFirstPair = miningPosition.pairData.reserve0\n    const valueSecondPair = miningPosition.pairData.reserve1\n    const firstPairName = miningPosition.miningPool.pair.token0\n    const secondPairName = miningPosition.miningPool.pair.token1\n    const pairAddress = miningPosition.miningPool.pair.id\n    const firstPairAddress = miningPosition.pairData.token0.id\n    const secondPairAddress = miningPosition.pairData.token1.id\n\n    return (\n      <DashGrid style={{ opacity: pairPercentage > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={firstPairAddress} a1={secondPairAddress} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + pairAddress}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName text={firstPairName + '-' + secondPairName} maxCharacters={below740 ? 10 : 18} />\n              </TYPE.main>\n            </CustomLink>\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link external href={getUniswapAppLink(firstPairAddress)} style={{ marginRight: '.5rem' }}>\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Stake More</ButtonLight>\n              </Link>\n              {pairPercentage > 0 && (\n                <Link external href={getUniswapAppLink(firstPairAddress)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Withdraw</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"uniswap\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(pairPercentage * valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>{formattedNum(pairPercentage * parseFloat(valueFirstPair))} </TYPE.small>\n                <FormattedName\n                  text={firstPairName}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>{formattedNum(pairPercentage * parseFloat(valueSecondPair))} </TYPE.small>\n                <FormattedName\n                  text={secondPairName}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n      </DashGrid>\n    )\n  }\n\n  const miningPositionsSorted =\n    miningPositions &&\n    miningPositions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 = (p0.balance / p0.pairData?.totalSupply) * p0.pairData?.reserveUSD\n          const bal1 = (p0.balance / p0.pairData?.totalSupply) * p1.pairData?.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((miningPosition, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} miningPosition={miningPosition} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>{' '}\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"uniswap\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!miningPositionsSorted ? <LocalLoader /> : miningPositionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(MiningPositionList)\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useUserTransactions, useUserPositions, useMiningPositions } from '../contexts/User'\nimport TxnList from '../components/TxnList'\nimport Panel from '../components/Panel'\nimport { formattedNum } from '../utils'\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport UserChart from '../components/UserChart'\nimport PairReturnsChart from '../components/PairReturnsChart'\nimport PositionList from '../components/PositionList'\nimport MiningPositionList from '../components/MiningPositionList'\nimport { TYPE } from '../Theme'\nimport { ButtonDropdown, ButtonLight } from '../components/ButtonStyled'\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport { Bookmark, Activity } from 'react-feather'\nimport Link from '../components/Link'\nimport { FEE_WARNING_TOKENS } from '../constants'\nimport { BasicLink } from '../components/Link'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\nimport { useSavedAccounts } from '../contexts/LocalStorage'\n\nconst AccountWrapper = styled.div`\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 6px 16px;\n  border-radius: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Header = styled.div``\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid #edeef2;\n  border-radius: 12px;\n`\n\nconst Flyout = styled.div`\n  position: absolute;\n  top: 38px;\n  left: -1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 999;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  padding-top: 4px;\n  border: 1px solid #edeef2;\n  border-top: none;\n`\n\nconst MenuRow = styled(Row)`\n  width: 100%;\n  padding: 12px 0;\n  padding-left: 12px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: 1fr;\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n`\n\nconst Warning = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text1};\n  padding: 1rem;\n  font-weight: 600;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  width: calc(100% - 2rem);\n`\n\nfunction AccountPage({ account }) {\n  // get data for this account\n  const transactions = useUserTransactions(account)\n  const positions = useUserPositions(account)\n  const miningPositions = useMiningPositions(account) // commented out by Issei\n\n  // get data for user stats\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\n\n  // get derived totals\n  let totalSwappedUSD = useMemo(() => {\n    return transactions?.swaps\n      ? transactions?.swaps.reduce((total, swap) => {\n          return total + parseFloat(swap.amountUSD)\n        }, 0)\n      : 0\n  }, [transactions])\n\n  // if any position has token from fee warning list, show warning\n  const [showWarning, setShowWarning] = useState(false)\n  useEffect(() => {\n    if (positions) {\n      for (let i = 0; i < positions.length; i++) {\n        if (\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\n        ) {\n          setShowWarning(true)\n        }\n      }\n    }\n  }, [positions])\n\n  // settings for list view and dropdowns\n  const hideLPContent = positions && positions.length === 0\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [activePosition, setActivePosition] = useState()\n\n  const dynamicPositions = activePosition ? [activePosition] : positions\n\n  const aggregateFees = dynamicPositions?.reduce(function (total, position) {\n    return total + position.fees.sum\n  }, 0)\n\n  const positionValue = useMemo(() => {\n    return dynamicPositions\n      ? dynamicPositions.reduce((total, position) => {\n          return (\n            total +\n            (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\n              position?.pair?.reserveUSD\n          )\n        }, 0)\n      : null\n  }, [dynamicPositions])\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  // adding/removing account from saved accounts\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n  const isBookmarked = savedAccounts.includes(account)\n  const handleBookmarkClick = useCallback(() => {\n    ;(isBookmarked ? removeAccount : addAccount)(account)\n  }, [account, isBookmarked, addAccount, removeAccount])\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\n            <Link\n              lineHeight={'145.23%'}\n              href={'https://testnet-fxscan.functionx.io/address/' + account}\n              target=\"_blank\"\n            >\n              {' '}\n              {account?.slice(0, 42)}{' '}\n            </Link>\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Header>\n          <RowBetween>\n            <span>\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n              <Link\n                lineHeight={'145.23%'}\n                href={'https://testnet-fxscan.functionx.io/address/' + account}\n                target=\"_blank\"\n              >\n                <TYPE.main fontSize={14}>View on FxScan</TYPE.main>\n              </Link>\n            </span>\n            <AccountWrapper>\n              <StyledIcon>\n                <Bookmark\n                  onClick={handleBookmarkClick}\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\n                />\n              </StyledIcon>\n            </AccountWrapper>\n          </RowBetween>\n        </Header>\n        <DashboardWrapper>\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\n          {!hideLPContent && (\n            <DropdownWrapper>\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\n                {!activePosition && (\n                  <RowFixed>\n                    <StyledIcon>\n                      <Activity size={16} />\n                    </StyledIcon>\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                  </RowFixed>\n                )}\n                {activePosition && (\n                  <RowFixed>\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\n                    <TYPE.body ml={'16px'}>\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\n                    </TYPE.body>\n                  </RowFixed>\n                )}\n              </ButtonDropdown>\n              {showDropdown && (\n                <Flyout>\n                  <AutoColumn gap=\"0px\">\n                    {positions?.map((p, i) => {\n                      if (p.pair.token1.symbol === 'WFX') {\n                        p.pair.token1.symbol = 'FX'\n                      }\n                      if (p.pair.token0.symbol === 'WFX') {\n                        p.pair.token0.symbol = 'FX'\n                      }\n                      return (\n                        p.pair.id !== activePosition?.pair.id && (\n                          <MenuRow\n                            onClick={() => {\n                              setActivePosition(p)\n                              setShowDropdown(false)\n                            }}\n                            key={i}\n                          >\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\n                            <TYPE.body ml={'16px'}>\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\n                            </TYPE.body>\n                          </MenuRow>\n                        )\n                      )\n                    })}\n                    {activePosition && (\n                      <MenuRow\n                        onClick={() => {\n                          setActivePosition()\n                          setShowDropdown(false)\n                        }}\n                      >\n                        <RowFixed>\n                          <StyledIcon>\n                            <Activity size={16} />\n                          </StyledIcon>\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                        </RowFixed>\n                      </MenuRow>\n                    )}\n                  </AutoColumn>\n                </Flyout>\n              )}\n            </DropdownWrapper>\n          )}\n          {!hideLPContent && (\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\n              <AutoRow gap=\"20px\">\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\n                      {positionValue\n                        ? formattedNum(positionValue, true)\n                        : positionValue === 0\n                        ? formattedNum(0, true)\n                        : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n              </AutoRow>\n            </Panel>\n          )}\n          {!hideLPContent && (\n            <PanelWrapper>\n              <Panel style={{ gridColumn: '1' }}>\n                {activePosition ? (\n                  <PairReturnsChart account={account} position={activePosition} />\n                ) : (\n                  <UserChart account={account} position={activePosition} />\n                )}\n              </Panel>\n            </PanelWrapper>\n          )}\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Positions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <PositionList positions={positions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Liquidity Mining Pools\n          </TYPE.main>\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            {miningPositions && <MiningPositionList miningPositions={miningPositions} />}\n            {!miningPositions && (\n              <AutoColumn gap=\"8px\" justify=\"flex-start\">\n                <TYPE.main>No Staked Liquidity.</TYPE.main>\n                <AutoRow gap=\"8px\" justify=\"flex-start\">\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Learn More</ButtonLight>{' '}\n                </AutoRow>{' '}\n              </AutoColumn>\n            )}\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Transactions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <TxnList transactions={transactions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Wallet Stats\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <AutoRow gap=\"20px\">\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\n                <TYPE.main>Total Value Swapped</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\n                </TYPE.header>\n                <TYPE.main>Total Fees Paid</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\n                <TYPE.main>Total Transactions</TYPE.main>\n              </AutoColumn>\n            </AutoRow>\n          </Panel>\n        </DashboardWrapper>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AccountPage\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\n\nimport TopTokenList from '../components/TokenList'\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\n// import CheckBox from '../components/Checkbox'\n// import QuestionHelper from '../components/QuestionHelper'\n\nfunction AllTokensPage() {\n  const allTokens = useAllTokenData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below600 = useMedia('(max-width: 800px)')\n\n  // const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        {/* <AutoRow gap=\"4px\">\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked tokens'} />\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\n        </AutoRow> */}\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\n          <TopTokenList tokens={allTokens} itemMax={50} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllTokensPage\n","import React, { useEffect, useState } from 'react'\nimport 'feather-icons'\n\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllPairData } from '../contexts/PairData'\nimport PairList from '../components/PairList'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween, AutoRow } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\nimport QuestionHelper from '../components/QuestionHelper'\nimport CheckBox from '../components/Checkbox'\n\nfunction AllPairsPage() {\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below800 = useMedia('(max-width: 800px)')\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\n          {!below800 && <Search small={true} />}\n        </RowBetween>\n        <AutoRow gap=\"4px\">\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked pairs'} />\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without WFX or stablecoins.\" />\n        </AutoRow>\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} useTracked={useTracked} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllPairsPage\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\nimport { AutoRow, RowBetween } from '../Row'\nimport { isAddress } from '../../utils'\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { Hover, StyledIcon } from '..'\nimport Panel from '../Panel'\nimport { Divider } from '..'\nimport { Flex } from 'rebass'\n\nimport { X } from 'react-feather'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  border-radius: 12px;\n`\n\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 12px 16px;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: 16px;\n  margin-right: 1rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst AccountLink = styled.span`\n  display: flex;\n  cursor: pointer;\n  color: ${({ theme }) => theme.link};\n  font-size: 14px;\n  font-weight: 500;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'account';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n`\n\nfunction AccountSearch({ history, small }) {\n  const [accountValue, setAccountValue] = useState()\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n\n  function handleAccountSearch() {\n    if (isAddress(accountValue)) {\n      history.push('/account/' + accountValue)\n      if (!savedAccounts.includes(accountValue)) {\n        addAccount(accountValue)\n      }\n    }\n  }\n\n  return (\n    <AutoColumn gap={'1rem'}>\n      {!small && (\n        <>\n          <AutoRow>\n            <Wrapper>\n              <Input\n                placeholder=\"0x...\"\n                onChange={(e) => {\n                  setAccountValue(e.target.value)\n                }}\n              />\n            </Wrapper>\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\n          </AutoRow>\n        </>\n      )}\n\n      <AutoColumn gap={'12px'}>\n        {!small && (\n          <Panel>\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\n            </DashGrid>\n            <Divider />\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\n                    <Flex\n                      area=\"account\"\n                      justifyContent=\"space-between\"\n                      onClick={() => history.push('/account/' + account)}\n                    >\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      <Hover\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          removeAccount(account)\n                        }}\n                      >\n                        <StyledIcon>\n                          <X size={16} />\n                        </StyledIcon>\n                      </Hover>\n                    </Flex>\n                  </DashGrid>\n                )\n              })\n            ) : (\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\n            )}\n          </Panel>\n        )}\n\n        {small && (\n          <>\n            <TYPE.main>{'Accounts'}</TYPE.main>\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <RowBetween key={account}>\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\n                      {small ? (\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n                      ) : (\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      )}\n                    </ButtonFaded>\n                    <Hover onClick={() => removeAccount(account)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n            ) : (\n              <TYPE.light>No pinned wallets</TYPE.light>\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n\nexport default withRouter(AccountSearch)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\nimport { Hover } from '..'\nimport TokenLogo from '../TokenLogo'\nimport AccountSearch from '../AccountSearch'\nimport { Bookmark, ChevronRight, X } from 'react-feather'\nimport { ButtonFaded } from '../ButtonStyled'\nimport FormattedName from '../FormattedName'\n\nconst RightColumn = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0px;\n  height: 100vh;\n  width: ${({ open }) => (open ? '160px' : '23px')};\n  padding: 1.25rem;\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg3};\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 9999;\n  overflow: auto;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst SavedButton = styled(RowBetween)`\n  padding-bottom: ${({ open }) => open && '20px'};\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg3};\n  margin-bottom: ${({ open }) => open && '1.25rem'};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ScrollableDiv = styled(AutoColumn)`\n  overflow: auto;\n  padding-bottom: 60px;\n`\n\nconst StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text2};\n`\n\nfunction PinnedData({ history, open, setSavedOpen }) {\n  const [savedPairs, , removePair] = useSavedPairs()\n  const [savedTokens, , removeToken] = useSavedTokens()\n\n  return !open ? (\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\n      <SavedButton open={open}>\n        <StyledIcon>\n          <Bookmark size={20} />\n        </StyledIcon>\n      </SavedButton>\n    </RightColumn>\n  ) : (\n    <RightColumn gap=\"1rem\" open={open}>\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\n        <RowFixed>\n          <StyledIcon>\n            <Bookmark size={16} />\n          </StyledIcon>\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\n        </RowFixed>\n        <StyledIcon>\n          <ChevronRight />\n        </StyledIcon>\n      </SavedButton>\n      <AccountSearch small={true} />\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\n        <AutoColumn gap={'12px'}>\n          <TYPE.main>Pinned Pairs</TYPE.main>\n          {Object.keys(savedPairs).filter((key) => {\n            return !!savedPairs[key]\n          }).length > 0 ? (\n            Object.keys(savedPairs)\n              .filter((address) => {\n                return !!savedPairs[address]\n              })\n              .map((address) => {\n                const pair = savedPairs[address]\n                return (\n                  <RowBetween key={pair.address}>\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\n                      <RowFixed>\n                        <TYPE.header>\n                          <FormattedName\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\n                            maxCharacters={12}\n                            fontSize={'12px'}\n                          />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removePair(pair.address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\n          )}\n        </AutoColumn>\n        <ScrollableDiv gap={'12px'}>\n          <TYPE.main>Pinned Tokens</TYPE.main>\n          {Object.keys(savedTokens).filter((key) => {\n            return !!savedTokens[key]\n          }).length > 0 ? (\n            Object.keys(savedTokens)\n              .filter((address) => {\n                return !!savedTokens[address]\n              })\n              .map((address) => {\n                const token = savedTokens[address]\n                return (\n                  <RowBetween key={address}>\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\n                      <RowFixed>\n                        <TokenLogo address={address} size={'14px'} />\n                        <TYPE.header ml={'6px'}>\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removeToken(address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\n          )}\n        </ScrollableDiv>\n      </AutoColumn>\n    </RightColumn>\n  )\n}\n\nexport default withRouter(PinnedData)\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { Flex } from 'rebass'\nimport Link from '../Link'\nimport { RowFixed } from '../Row'\nimport Logo from '../../assets/logo_white.svg'\nimport Wordmark from '../../assets/wordmark_white.svg'\n\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\n\nconst TitleWrapper = styled.div`\n  text-decoration: none;\n  z-index: 10;\n  width: 100%;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst UniIcon = styled(Link)`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  margin-left: 12px;\n  :hover {\n    opacity: 1;\n  }\n`\n\nexport default function Title() {\n  const history = useHistory()\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  return (\n    <TitleWrapper onClick={() => history.push('/')}>\n      <Flex alignItems=\"center\" style={{ justifyContent: 'space-between' }}>\n        <RowFixed>\n          <UniIcon id=\"link\" onClick={() => history.push('/')}>\n            <img width={'24px'} src={Logo} alt=\"logo\" />\n          </UniIcon>\n          FunctionX\n          {/* {!below1080 && (\n            <img width={'84px'} style={{ marginLeft: '8px', marginTop: '0px' }} src={Wordmark} alt=\"logo\" />\n          )} */}\n        </RowFixed>\n        {below1080 && (\n          <RowFixed style={{ alignItems: 'flex-end' }}>\n            <BasicLink to=\"/home\">\n              <Option activeText={history.location.pathname === '/home' ?? undefined}>Overview</Option>\n            </BasicLink>\n            <BasicLink to=\"/tokens\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'tokens' ||\n                    history.location.pathname.split('/')[1] === 'token') ??\n                  undefined\n                }\n              >\n                Tokens\n              </Option>\n            </BasicLink>\n            <BasicLink to=\"/pairs\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'pairs' ||\n                    history.location.pathname.split('/')[1] === 'pair') ??\n                  undefined\n                }\n              >\n                Pairs\n              </Option>\n            </BasicLink>\n\n            <BasicLink to=\"/accounts\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'accounts' ||\n                    history.location.pathname.split('/')[1] === 'account') ??\n                  undefined\n                }\n              >\n                Accounts\n              </Option>\n            </BasicLink>\n          </RowFixed>\n        )}\n      </Flex>\n    </TitleWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Sun, Moon } from 'react-feather'\n\nconst IconWrapper = styled.div<{ isActive?: boolean }>`\n  opacity: ${({ isActive }) => (isActive ? 0.8 : 0.4)};\n\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst StyledToggle = styled.div`\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  text-decoration: none;\n  margin-top: 1rem;\n  color: white;\n\n  :hover {\n    text-decoration: none;\n  }\n`\n\nexport interface ToggleProps {\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle onClick={toggle}>\n      <span>\n        <IconWrapper isActive={!isActive}>\n          <Sun size={20} />\n        </IconWrapper>\n      </span>\n      <span style={{ padding: '0 .5rem' }}>{' / '}</span>\n      <span>\n        <IconWrapper isActive={isActive}>\n          <Moon size={20} />\n        </IconWrapper>\n      </span>\n    </StyledToggle>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport Title from '../Title'\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\nimport { transparentize } from 'polished'\nimport { TYPE } from '../../Theme'\nimport { withRouter } from 'react-router-dom'\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\nimport Link from '../Link'\nimport { useSessionStart } from '../../contexts/Application'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport Toggle from '../Toggle'\n\nconst Wrapper = styled.div`\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\n  color: ${({ theme }) => theme.text1};\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\n  position: sticky;\n  top: 0px;\n  z-index: 9999;\n  box-sizing: border-box;\n  /* background-color: #1b1c22; */\n  background: linear-gradient(193.68deg, #1b1c22 0.68%, #000000 100.48%);\n  color: ${({ theme }) => theme.bg2};\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    position: relative;\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 1rem;\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst DesktopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n`\n\nconst MobileWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  margin-right: 0.75rem;\n  font-size: 0.825rem;\n  font-weight: 500;\n  display: inline-box;\n  display: -webkit-inline-box;\n  opacity: 0.8;\n  :hover {\n    opacity: 1;\n  }\n  a {\n    color: ${({ theme }) => theme.white};\n  }\n`\n\nconst Polling = styled.div`\n  position: fixed;\n  display: flex;\n  left: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: white;\n  opacity: 0.4;\n  transition: opacity 0.25s ease;\n  :hover {\n    opacity: 1;\n  }\n`\nconst PollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-right: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nfunction SideNav({ history }) {\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  const below1180 = useMedia('(max-width: 1180px)')\n\n  const seconds = useSessionStart()\n\n  const [isDark, toggleDarkMode] = useDarkModeManager()\n\n  return (\n    <Wrapper isMobile={below1080}>\n      {!below1080 ? (\n        <DesktopWrapper>\n          <AutoColumn gap=\"1rem\" style={{ marginLeft: '.75rem', marginTop: '1.5rem' }}>\n            <Title />\n            {!below1080 && (\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\n                <BasicLink to=\"/home\">\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\n                    Overview\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/tokens\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\n                        history.location.pathname.split('/')[1] === 'token') ??\n                      undefined\n                    }\n                  >\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\n                    Tokens\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/pairs\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\n                        history.location.pathname.split('/')[1] === 'pair') ??\n                      undefined\n                    }\n                  >\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\n                    Pairs\n                  </Option>\n                </BasicLink>\n\n                <BasicLink to=\"/accounts\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\n                        history.location.pathname.split('/')[1] === 'account') ??\n                      undefined\n                    }\n                  >\n                    <List size={20} style={{ marginRight: '.75rem' }} />\n                    Accounts\n                  </Option>\n                </BasicLink>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\n            {/* below commented out by Issei */}\n            {/* <HeaderText>\n              <Link href=\"https://uniswap.org\" target=\"_blank\">\n                Uniswap.org\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://v1.uniswap.info\" target=\"_blank\">\n                V1 Analytics\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://uniswap.org/docs/v2\" target=\"_blank\">\n                Docs\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://discord.com/invite/FCfyBSbCU5\" target=\"_blank\">\n                Discord\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://twitter.com/UniswapProtocol\" target=\"_blank\">\n                Twitter\n              </Link>\n            </HeaderText> */}\n            <HeaderText>\n              <Link href=\"https://functionx.io/home\" target=\"_blank\">\n                FunctionX\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://functionx.gitbook.io/home/\" target=\"_blank\">\n                Docs\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://twitter.com/FUNCTIONX_IO\" target=\"_blank\">\n                Twitter\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://discord.com/invite/J6k8arnyEQ\" target=\"_blank\">\n                Discord\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://t.me/functionx\" target=\"_blank\">\n                Telegram\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://www.youtube.com/channel/UCmS83bWNR43jwEOC6EJaOyw\" target=\"_blank\">\n                Youtube\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://medium.com/functionx\" target=\"_blank\">\n                Medium\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://facebook.com/FunctionX.io/\" target=\"_blank\">\n                Facebook\n              </Link>\n            </HeaderText>\n            <Toggle isActive={isDark} toggle={toggleDarkMode} />\n          </AutoColumn>\n          {!below1180 && (\n            <Polling style={{ marginLeft: '.5rem' }}>\n              <PollingDot />\n              <a href=\"/\" style={{ color: 'white' }}>\n                <TYPE.small color={'white'}>\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\n                </TYPE.small>\n              </a>\n            </Polling>\n          )}\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <Title />\n        </MobileWrapper>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default withRouter(SideNav)\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { TYPE } from '../Theme'\nimport { PageWrapper, FullWrapper } from '../components'\nimport Panel from '../components/Panel'\nimport LPList from '../components/LPList'\nimport styled from 'styled-components'\nimport AccountSearch from '../components/AccountSearch'\nimport { useTopLps } from '../contexts/GlobalData'\nimport LocalLoader from '../components/LocalLoader'\nimport { RowBetween } from '../components/Row'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\n\nconst AccountWrapper = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nfunction AccountLookup() {\n  // scroll to top\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const topLps = useTopLps()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <AccountWrapper>\n          <AccountSearch />\n        </AccountWrapper>\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n          Top Liquidity Positions\n        </TYPE.main>\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(AccountLookup)\n","import { useEffect } from 'react'\nimport ReactGA from 'react-ga'\n\n// fires a GA pageview every time the route changes\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }) {\n  useEffect(() => {\n    ReactGA.pageview(`${pathname}${search}`)\n  }, [pathname, search])\n  return null\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ApolloProvider } from 'react-apollo'\nimport { client } from './apollo/client'\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\nimport GlobalPage from './pages/GlobalPage'\nimport TokenPage from './pages/TokenPage'\nimport PairPage from './pages/PairPage'\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\nimport { isAddress } from './utils'\nimport AccountPage from './pages/AccountPage'\nimport AllTokensPage from './pages/AllTokensPage'\nimport AllPairsPage from './pages/AllPairsPage'\nimport PinnedData from './components/PinnedData'\n\nimport SideNav from './components/SideNav'\nimport AccountLookup from './pages/AccountLookup'\nimport LocalLoader from './components/LocalLoader'\nimport { useLatestBlocks } from './contexts/Application'\nimport GoogleAnalyticsReporter from './components/analytics/GoogleAnalyticsReporter'\nimport { PAIR_BLACKLIST, TOKEN_BLACKLIST } from './constants'\n\nconst AppWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\nconst ContentWrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${({ open }) => (open ? '220px 1fr 200px' : '220px 1fr 64px')};\n\n  @media screen and (max-width: 1400px) {\n    grid-template-columns: 220px 1fr;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 1fr;\n    max-width: 100vw;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n`\n\nconst Right = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0rem;\n  z-index: 99;\n  width: ${({ open }) => (open ? '220px' : '64px')};\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\n  overflow: auto;\n  background-color: ${({ theme }) => theme.bg1};\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`\n\nconst Center = styled.div`\n  height: 100%;\n  z-index: 9999;\n  transition: width 0.25s ease;\n  background-color: ${({ theme }) => theme.onlyLight};\n`\n\nconst WarningWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst WarningBanner = styled.div`\n  background-color: #ff6871;\n  padding: 1.5rem;\n  color: white;\n  width: 100%;\n  text-align: center;\n  font-weight: 500;\n`\n\n/**\n * Wrap the component with the header and sidebar pinned tab\n */\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\n  return (\n    <>\n      <ContentWrapper open={savedOpen}>\n        <SideNav />\n        <Center id=\"center\">{children}</Center>\n        <Right open={savedOpen}>\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\n        </Right>\n      </ContentWrapper>\n    </>\n  )\n}\n\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\n\nfunction App() {\n  const [savedOpen, setSavedOpen] = useState(false)\n\n  const globalData = useGlobalData()\n  const globalChartData = useGlobalChartData()\n  const [latestBlock, headBlock] = useLatestBlocks()\n\n  // show warning\n  const showWarning = headBlock && latestBlock ? headBlock - latestBlock > BLOCK_DIFFERENCE_THRESHOLD : false\n\n  return (\n    <ApolloProvider client={client}>\n      <AppWrapper>\n        {showWarning && (\n          <WarningWrapper>\n            <WarningBanner>\n              {`Warning: The data on this site has only synced to FunctionX block ${latestBlock} (out of ${headBlock}). Please check back soon.`}\n            </WarningBanner>\n          </WarningWrapper>\n        )}\n        {globalData &&\n        Object.keys(globalData).length > 0 &&\n        globalChartData &&\n        Object.keys(globalChartData).length > 0 ? (\n          <BrowserRouter>\n            <Route component={GoogleAnalyticsReporter} />\n            <Switch>\n              <Route\n                exacts\n                strict\n                path=\"/token/:tokenAddress\"\n                render={({ match }) => {\n                  if (\n                    isAddress(match.params.tokenAddress.toLowerCase()) &&\n                    !Object.keys(TOKEN_BLACKLIST).includes(match.params.tokenAddress.toLowerCase())\n                  ) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/pair/:pairAddress\"\n                render={({ match }) => {\n                  if (\n                    isAddress(match.params.pairAddress.toLowerCase()) &&\n                    !Object.keys(PAIR_BLACKLIST).includes(match.params.pairAddress.toLowerCase())\n                  ) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/account/:accountAddress\"\n                render={({ match }) => {\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n\n              <Route path=\"/home\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <GlobalPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/tokens\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllTokensPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/pairs\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllPairsPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/accounts\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AccountLookup />\n                </LayoutWrapper>\n              </Route>\n\n              <Redirect to=\"/home\" />\n            </Switch>\n          </BrowserRouter>\n        ) : (\n          <LocalLoader fill=\"true\" />\n        )}\n      </AppWrapper>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { isMobile } from 'react-device-detect'\nimport ThemeProvider, { GlobalStyle } from './Theme'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\nimport GlobalDataContextProvider from './contexts/GlobalData'\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\nimport ApplicationContextProvider from './contexts/Application'\nimport UserContextProvider from './contexts/User'\nimport App from './App'\n\n// initialize GA\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\n\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n    gaOptions: {\n      storage: 'none',\n      storeGac: false,\n    },\n  })\n  ReactGA.set({\n    anonymizeIp: true,\n    customBrowserType: !isMobile\n      ? 'desktop'\n      : 'web3' in window || 'ethereum' in window\n      ? 'mobileWeb3'\n      : 'mobileRegular',\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TokenDataContextProvider>\n          <GlobalDataContextProvider>\n            <PairDataContextProvider>\n              <UserContextProvider>{children}</UserContextProvider>\n            </PairDataContextProvider>\n          </GlobalDataContextProvider>\n        </TokenDataContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <PairDataContextUpdater />\n      <TokenDataContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <ContextProviders>\n    <Updaters />\n    <ThemeProvider>\n      <>\n        <GlobalStyle />\n        <App />\n      </>\n    </ThemeProvider>\n  </ContextProviders>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}